{
  "hash": "4c5d40a965df4d08440a32af030cd978",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Visualiation des données\"\nauthor: \"Anasse Yahanan\"\ndate: \"2025-01-12\"\ncategories: [news, code, python, analysis]\nimage: \"fdg.png\"\n---\n\n\n## Projet de Data Science\n\n### Présentation\n\nVous envisagez de sortir voir un film. pour ce faire vous decidez de faire confiance aux critiques et évaluation en ligne. Cependant vous êtes convaincu l'entreprise qui affichie les notes gagne de l'argent en vandant les billets. Aussi une question vous vient à l'esprit : Est-ce que l'entreprise à tendance à sur-évaluer les films avec de meilleurs notes que celle qu'ils devraient obtenir ?\n\n### Objectif\n\nUtilisez les compétences en pandas et data viz pour déterminer si les notes de Fandango en 2015 etaient orientées vers une meilleures évaluationnotation des films dans le but de vendre plus de billet.\n\n### Methodologie\n\nComparer les note des Fandango avec celles de l'article du site 538 [Clique ici](https://github.com/fivethirtyeight/data)\n\n------------------------------------------------------------------------\n\n### Presentation des données\n\nData 1 : **all_sites_scores.csv**\n\nce dataset contient tous les films qui ont une note Rotten Tomatoes, une note RT User, une note Metacritic, une note note Metacritic User, une note IMDb, et au moins 30 critiques de fans sur Fandango. Les données ont été extraites de 24 août 2015\n\n![](im1.png)\n\nData 2 : **fandango_scrape.csv**\n\ncontient tous les films de l'article 538 tirés de Fandango\n\n## ![](im2.png)\n\n### Importation des bibliothèques\n\n::: {#b843c29b .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt \n```\n:::\n\n\n### Importation du premier dataset\n\n-   Importoation du dataset **fandango_scrape.csv**\n\n::: {#cd80ffd4 .cell execution_count=2}\n``` {.python .cell-code}\nfandango = pd.read_csv(\"fandango_scrape.csv\")\n```\n:::\n\n\n-   Exploration des proprités du datasets et head\n\n::: {#3b652e8c .cell execution_count=3}\n``` {.python .cell-code}\nfandango.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>FILM</th>\n      <th>STARS</th>\n      <th>RATING</th>\n      <th>VOTES</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Fifty Shades of Grey (2015)</td>\n      <td>4.0</td>\n      <td>3.9</td>\n      <td>34846</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Jurassic World (2015)</td>\n      <td>4.5</td>\n      <td>4.5</td>\n      <td>34390</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>American Sniper (2015)</td>\n      <td>5.0</td>\n      <td>4.8</td>\n      <td>34085</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Furious 7 (2015)</td>\n      <td>5.0</td>\n      <td>4.8</td>\n      <td>33538</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Inside Out (2015)</td>\n      <td>4.5</td>\n      <td>4.5</td>\n      <td>15749</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n::: {#a1813c6b .cell execution_count=4}\n``` {.python .cell-code}\nfandango.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 504 entries, 0 to 503\nData columns (total 4 columns):\n #   Column  Non-Null Count  Dtype  \n---  ------  --------------  -----  \n 0   FILM    504 non-null    object \n 1   STARS   504 non-null    float64\n 2   RATING  504 non-null    float64\n 3   VOTES   504 non-null    int64  \ndtypes: float64(2), int64(1), object(1)\nmemory usage: 15.9+ KB\n```\n:::\n:::\n\n\n::: {#bd3b77e4 .cell execution_count=5}\n``` {.python .cell-code}\nfandango.describe().transpose()\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>count</th>\n      <th>mean</th>\n      <th>std</th>\n      <th>min</th>\n      <th>25%</th>\n      <th>50%</th>\n      <th>75%</th>\n      <th>max</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>STARS</th>\n      <td>504.0</td>\n      <td>3.558532</td>\n      <td>1.563133</td>\n      <td>0.0</td>\n      <td>3.5</td>\n      <td>4.0</td>\n      <td>4.50</td>\n      <td>5.0</td>\n    </tr>\n    <tr>\n      <th>RATING</th>\n      <td>504.0</td>\n      <td>3.375794</td>\n      <td>1.491223</td>\n      <td>0.0</td>\n      <td>3.1</td>\n      <td>3.8</td>\n      <td>4.30</td>\n      <td>5.0</td>\n    </tr>\n    <tr>\n      <th>VOTES</th>\n      <td>504.0</td>\n      <td>1147.863095</td>\n      <td>3830.583136</td>\n      <td>0.0</td>\n      <td>3.0</td>\n      <td>18.5</td>\n      <td>189.75</td>\n      <td>34846.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n-   **Explorons la popularité d'un film et son classement**\n\n::: {#935ba4f8 .cell execution_count=6}\n``` {.python .cell-code}\nfig, ax = plt.subplots(figsize = (9,5))\n\n# graphique \nscatter = ax.scatter(\n  x = fandango['RATING'],\n  y = fandango['VOTES'],\n  c = fandango['RATING'],\n)\n\n# personnalisation\nax.set(\n  title = \"Popularité des films et leurs classement\",\n  xlabel = \"Notes attribuées par les spectateurs (RATING)\",\n  ylabel = \"Classement par vote (VOTE)\"\n  )\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-7-output-1.png){width=759 height=451}\n:::\n:::\n\n\nLa popularité des films semblent être en accord avec les votes il nous faudra explorer la correlation etre les variables pour comprendre si les notes (STARS) afichées par fandango évoluent dans le même sens que la note des spectateus (RATING)\n\n-   **Explorons la corrélation entre les variables**\n\n::: {#0f075e5f .cell execution_count=7}\n``` {.python .cell-code}\nfandango[['STARS','RATING', 'VOTES']].corr()\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>STARS</th>\n      <th>RATING</th>\n      <th>VOTES</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>STARS</th>\n      <td>1.000000</td>\n      <td>0.994696</td>\n      <td>0.164218</td>\n    </tr>\n    <tr>\n      <th>RATING</th>\n      <td>0.994696</td>\n      <td>1.000000</td>\n      <td>0.163764</td>\n    </tr>\n    <tr>\n      <th>VOTES</th>\n      <td>0.164218</td>\n      <td>0.163764</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nles variables STARS et RATING ne sont pas parfaitement corrélées. **hypotheses** :Il semble y avoir un ecart entre les scores attribués par les spectateurs aux films et celles attribuées a fandango\n\n-   **Création d'une nouvele colonnes contenant la date de sortie des films**\n\n::: {#1e61a93b .cell execution_count=8}\n``` {.python .cell-code}\ntitle = 'Nom du titre du film (Annee)'\n```\n:::\n\n\n::: {#1fd8e956 .cell execution_count=9}\n``` {.python .cell-code}\ntitle.split('(')[-1].replace(')', '')\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n```\n'Annee'\n```\n:::\n:::\n\n\n::: {#c829520a .cell execution_count=10}\n``` {.python .cell-code}\nfandango['YEAR'] =  fandango['FILM'].apply(lambda title: title.split('(')[-1].replace(')', '') )\n```\n:::\n\n\n::: {#08267ac9 .cell execution_count=11}\n``` {.python .cell-code}\nfandango\n```\n\n::: {.cell-output .cell-output-display execution_count=11}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>FILM</th>\n      <th>STARS</th>\n      <th>RATING</th>\n      <th>VOTES</th>\n      <th>YEAR</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Fifty Shades of Grey (2015)</td>\n      <td>4.0</td>\n      <td>3.9</td>\n      <td>34846</td>\n      <td>2015</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Jurassic World (2015)</td>\n      <td>4.5</td>\n      <td>4.5</td>\n      <td>34390</td>\n      <td>2015</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>American Sniper (2015)</td>\n      <td>5.0</td>\n      <td>4.8</td>\n      <td>34085</td>\n      <td>2015</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Furious 7 (2015)</td>\n      <td>5.0</td>\n      <td>4.8</td>\n      <td>33538</td>\n      <td>2015</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Inside Out (2015)</td>\n      <td>4.5</td>\n      <td>4.5</td>\n      <td>15749</td>\n      <td>2015</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>499</th>\n      <td>Valiyavan (2015)</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>2015</td>\n    </tr>\n    <tr>\n      <th>500</th>\n      <td>WWE SummerSlam 2015 (2015)</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>2015</td>\n    </tr>\n    <tr>\n      <th>501</th>\n      <td>Yagavarayinum Naa Kaakka (2015)</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>2015</td>\n    </tr>\n    <tr>\n      <th>502</th>\n      <td>Yesterday, Today and Tomorrow (1964)</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>1964</td>\n    </tr>\n    <tr>\n      <th>503</th>\n      <td>Zarafa (2012)</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>2012</td>\n    </tr>\n  </tbody>\n</table>\n<p>504 rows × 5 columns</p>\n</div>\n```\n:::\n:::\n\n\n-   **Explorons le nombre de film par Année**\n\n::: {#def100fc .cell execution_count=12}\n``` {.python .cell-code}\nfandango['YEAR'].value_counts()\n```\n\n::: {.cell-output .cell-output-display execution_count=12}\n```\nYEAR\n2015    478\n2014     23\n2016      1\n1964      1\n2012      1\nName: count, dtype: int64\n```\n:::\n:::\n\n\n-   **Explorons le top 10 des films avec le plus grand nombre de votes**\n\n::: {#d924ee47 .cell execution_count=13}\n``` {.python .cell-code}\nfandango.nlargest(10, 'VOTES')\n```\n\n::: {.cell-output .cell-output-display execution_count=13}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>FILM</th>\n      <th>STARS</th>\n      <th>RATING</th>\n      <th>VOTES</th>\n      <th>YEAR</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Fifty Shades of Grey (2015)</td>\n      <td>4.0</td>\n      <td>3.9</td>\n      <td>34846</td>\n      <td>2015</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Jurassic World (2015)</td>\n      <td>4.5</td>\n      <td>4.5</td>\n      <td>34390</td>\n      <td>2015</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>American Sniper (2015)</td>\n      <td>5.0</td>\n      <td>4.8</td>\n      <td>34085</td>\n      <td>2015</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Furious 7 (2015)</td>\n      <td>5.0</td>\n      <td>4.8</td>\n      <td>33538</td>\n      <td>2015</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Inside Out (2015)</td>\n      <td>4.5</td>\n      <td>4.5</td>\n      <td>15749</td>\n      <td>2015</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>The Hobbit: The Battle of the Five Armies (2014)</td>\n      <td>4.5</td>\n      <td>4.3</td>\n      <td>15337</td>\n      <td>2014</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Kingsman: The Secret Service (2015)</td>\n      <td>4.5</td>\n      <td>4.2</td>\n      <td>15205</td>\n      <td>2015</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Minions (2015)</td>\n      <td>4.0</td>\n      <td>4.0</td>\n      <td>14998</td>\n      <td>2015</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Avengers: Age of Ultron (2015)</td>\n      <td>5.0</td>\n      <td>4.5</td>\n      <td>14846</td>\n      <td>2015</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>Into the Woods (2014)</td>\n      <td>3.5</td>\n      <td>3.4</td>\n      <td>13055</td>\n      <td>2014</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n-   **Explorons le nombre de films avec 0/aucun votes**\n\n::: {#2d5f4cd5 .cell execution_count=14}\n``` {.python .cell-code}\nfandango[fandango['VOTES'] == 0]\n```\n\n::: {.cell-output .cell-output-display execution_count=14}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>FILM</th>\n      <th>STARS</th>\n      <th>RATING</th>\n      <th>VOTES</th>\n      <th>YEAR</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>435</th>\n      <td>6 Years (2015)</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>2015</td>\n    </tr>\n    <tr>\n      <th>436</th>\n      <td>7 Minutes (2015)</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>2015</td>\n    </tr>\n    <tr>\n      <th>437</th>\n      <td>A Year in Champagne (2015)</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>2015</td>\n    </tr>\n    <tr>\n      <th>438</th>\n      <td>Balls Out (2015)</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>2015</td>\n    </tr>\n    <tr>\n      <th>439</th>\n      <td>Before I Wake (2015)</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>2015</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>499</th>\n      <td>Valiyavan (2015)</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>2015</td>\n    </tr>\n    <tr>\n      <th>500</th>\n      <td>WWE SummerSlam 2015 (2015)</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>2015</td>\n    </tr>\n    <tr>\n      <th>501</th>\n      <td>Yagavarayinum Naa Kaakka (2015)</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>2015</td>\n    </tr>\n    <tr>\n      <th>502</th>\n      <td>Yesterday, Today and Tomorrow (1964)</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>1964</td>\n    </tr>\n    <tr>\n      <th>503</th>\n      <td>Zarafa (2012)</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>2012</td>\n    </tr>\n  </tbody>\n</table>\n<p>69 rows × 5 columns</p>\n</div>\n```\n:::\n:::\n\n\n-   **Extraction des films qui ont connu au moins un vote**\n\n::: {#3f62c0e0 .cell execution_count=15}\n``` {.python .cell-code}\ndf_fandango = fandango[(fandango['VOTES'] > 0)]\ndf_fandango\n```\n\n::: {.cell-output .cell-output-display execution_count=15}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>FILM</th>\n      <th>STARS</th>\n      <th>RATING</th>\n      <th>VOTES</th>\n      <th>YEAR</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Fifty Shades of Grey (2015)</td>\n      <td>4.0</td>\n      <td>3.9</td>\n      <td>34846</td>\n      <td>2015</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Jurassic World (2015)</td>\n      <td>4.5</td>\n      <td>4.5</td>\n      <td>34390</td>\n      <td>2015</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>American Sniper (2015)</td>\n      <td>5.0</td>\n      <td>4.8</td>\n      <td>34085</td>\n      <td>2015</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Furious 7 (2015)</td>\n      <td>5.0</td>\n      <td>4.8</td>\n      <td>33538</td>\n      <td>2015</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Inside Out (2015)</td>\n      <td>4.5</td>\n      <td>4.5</td>\n      <td>15749</td>\n      <td>2015</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>430</th>\n      <td>That Sugar Film (2015)</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>1</td>\n      <td>2015</td>\n    </tr>\n    <tr>\n      <th>431</th>\n      <td>The Intern (2015)</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>1</td>\n      <td>2015</td>\n    </tr>\n    <tr>\n      <th>432</th>\n      <td>The Park Bench (2015)</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>1</td>\n      <td>2015</td>\n    </tr>\n    <tr>\n      <th>433</th>\n      <td>The Wanted 18 (2015)</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>1</td>\n      <td>2015</td>\n    </tr>\n    <tr>\n      <th>434</th>\n      <td>Z For Zachariah (2015)</td>\n      <td>5.0</td>\n      <td>5.0</td>\n      <td>1</td>\n      <td>2015</td>\n    </tr>\n  </tbody>\n</table>\n<p>435 rows × 5 columns</p>\n</div>\n```\n:::\n:::\n\n\n-   **Creons un graphique qui affiche la distribustion des note (STARS) par rapport à l'évolution réelle des votes (RATTING)**\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}