[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Anassé Yahanan",
    "section": "",
    "text": "Statisticien, Data Analyst et Data Scientist, je transforme des données complexes en insights stratégiques pour une prise de décision éclairée. Expert en R, Python et SQL, je conçois des modèles statistiques, automatise des processus et développe des outils interactifs avec RShiny et Streamlit. J’ai travaillé sur des projets variés, allant de la lutte contre la désinformation à l’optimisation marketing, en passant par la prévision des ventes et les systèmes de recommandation. Formateur en R et Python, je partage mes compétences pour renforcer les capacités en analyse de données. Passionné par les données, je combine rigueur analytique et créativité technique pour créer un impact mesurable."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Bienvenue sur mon blog",
    "section": "",
    "text": "Je suis ravi de vous accueillir dans cet espace dédié à la passion des données, de l’analyse et de l’innovation. Ici, vous découvrirez mes projets, mes compétences et mes réflexions autour de la Data Science, de la statistique et de la visualisation de données.\nL’objectif de ce blog est de partager mon parcours, mes réalisations et mes apprentissages, tout en offrant des insights utiles et pratiques sur le monde des données. Que vous soyez un professionnel chevronné, un passionné de données ou simplement curieux, vous trouverez ici des contenus variés : analyses de projets, tutoriels techniques, astuces pour optimiser vos workflows, et bien plus encore.\nExplorez, inspirez-vous et n’hésitez pas à me contacter pour échanger ou collaborer. Ensemble, transformons les données en solutions concrètes et impactantes !\nBonne visite,"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Analyse des donnees MPG",
    "section": "",
    "text": "Les données utilisées proviennent du jeu de données mpg inclut dans le package ggplot2. La base de données contient des informations sur la consommation de carburants de 234 vehicules, modèles de 1999 à 2008 ainsi que divers caractéristiques techniques et descriptives de ces véhicules.\n\n\n\n\nExplorer et analyser les relations entre les différentes variables du jeu de données mpg afin de fournir des recommandations aux acheteurs concernant la consommation de carburant des véhicules.\nspécifiquement il s’agirat :\n\nD’explorer les données : comprendre la structure des données , identifier les variables clés et détecter les anomalies, valeurs aberrantes ou manquantes, creer si possible de nouvelles variables\nRéaliser une analyse descriptive : resumer les principales caractéristiques des données à l’aide de statistiques descriptives\nAnalyser la consommation de varburant : Etudier les facteurs qui influent la consommation de carburant (milles par gallon [mpg ]\nModeliser : Construstruire des modele de regression pour predire la consommation\nVisualiser les resultats : Créer des visuels informatfs pour communuquer les résultats\n\n\n\n\n\n\nImporter les données mpg\nNetoyer les données\n\nvaleurs manquantes\nvaleurs aberrantes\ndoublons\n\nAnalyse exploratoire (EDA)\n\nfeature engineering\nstatistique descriptive\n\nVisualiser et communiquer les résultats\n\nBivariées des variables pertinentes\nmultivariées\nsegmentation (K-means)\n\n\n\n\n\n\nLes principaux facteurs qui influencent la consommation de carburant des vehicules sont identifiés\nLes insights sur les tendances et les patterns contenus dans la données sont fournit\nDes recommandations basées sur les résultats de l’analyse sont proposées\n\n\n\n\n\nL’ensemble des packages utilisés pour la réalisation de ce projet sont :\n\nlibrary(tidyverse)\nlibrary(naniar)\nlibrary(DT)\nlibrary(psych)\nlibrary(ggheatmap)\nlibrary(reshape2)\nlibrary(ggplot2)\nlibrary(ggforce)\nlibrary(glue)\nlibrary(ggdist)\n\n\n\n\n\n\n\nValeurs manquantes - valeurs en double\n\nLe graphique totalement gris montre que les données mpg ne contiennent pas de valeurs manquantes\nL’ensembles des données ne contiennent pas de doublon\n\n\n\nmpg %&gt;% \n  vis_miss()\n\n\n\n\n\n\n\n\n\n\n\n\n\nForatage des données\nTranformation de toutes les varibles de type chr en factor\n\n\nmpg_format &lt;- \n  mpg %&gt;% \n  mutate_if(is.character, as.factor)\n\n\nCréation de nouvelles variables\n\nconsommation moyenne de carburant (avg_mpg) [ avg_mpg = (cty + hwy) /2 ]\ncatégorisation de la consommation [ Faible : agv_mpg&lt;20; Moyenne : 20&lt;=avg_mpg&lt;=40 sinon Elevée ]\némission de CO2 des véhicules [ 1 gallon —&gt; 8.89 kg CO2 ; 1 mille/gallon —&gt;0.425 kg CO2 ]\ncatégorisation de la cylindré [ Petite: displ&lt;2.0, Moyenne : 2.0&lt;=displ&lt;=4.0 sinon Grande ]\n\n\n\nmpg_aumente &lt;- \n  mpg_format %&gt;% \n  mutate(\n    # calcule de avg_mpg\n    avg_mpg = (cty + hwy)/2,\n    # catégorisation de la consommation \n         fuel_efficiency = case_when(\n           avg_mpg &lt; 20 ~ \"Faible\",\n           avg_mpg &gt;= 20 & avg_mpg &lt;=30 ~ \"Moyenne\",\n           TRUE ~ \"Elevee\"\n         ),\n    # émission de CO2\n         co2_emission = round((8887/avg_mpg) * 0.621371),\n    # catégorisation de la cylindrée \n         displ_category = case_when(\n           displ &lt; 2.0 ~ \"Petite\",\n           displ &gt;= 2.0 & displ &lt;= 4.0 ~ \"Moyenne\",\n           TRUE ~ \"Grande\"\n         ))\n\n\n\n\n\nDictionnaire des données\n\n\nSource : Données mpg (ggplot2)\n\n\n\n\n\n\n\n\nVariables\nDescriptif\nNature\nModalités\n\n\n\n\n\nVariables initiales\n\n\n\n\nmanufacturer\nConstructeur de véhicule\nfactor\naudi, toyota, etc…\n\n\nmodel\nModèle du véhicule\nfactor\na4, a4 quatro, etc…\n\n\nyear\nAnnée du modèle\nint\n\n\n\ncyl\nNombre de cylindres\nint\n\n\n\ntrans\nType de transmission\nfactor\nauto, manuel\n\n\ndrv\nType de traction\nfactor\nf : avant, r : propultion , 4 : 4x4\n\n\ndispl\ncylindres du moteur (en littre)\nint\n\n\n\ncty\nConsommation en ville\nint\n\n\n\nhwy\nConsommation sur autoroute\nint\n\n\n\nfl\nType de carburant\nfactor\np , etc…\n\n\nclass\nclasse de véhicule\nfactor\nsuv, compact, etc…\n\n\n\nVariables ajoutées (crées)\n\n\n\n\navg_mpg\nconsommation moyenne de carburant\nint\n\n\n\nfuel_efficiency\ncatégorisation de la consommation\nfactor\nFaible, Moyen, etc…\n\n\nCO2_emission\nQuantité de CO2 émit par les véhicules\nint\n\n\n\ndispl_categoty\nCatégorisation de la cylindré\nfactor\nPetite, Moyenne, etc..\n\n\n\n\nPrésentation de la base de données\n\n\ndatatable(mpg_aumente, \n          extensions = 'Buttons',\n          options = list(\n            dom = 'Bfrtip',\n            button = c('copy', 'csv', 'excel', 'pdf', 'print'),\n            pageLength = 10,\n            lengthMenu = c(5, 10, 15, 20),\n            searching = TRUE,\n            ordering = TRUE,\n            scrollX = TRUE\n          ),\n          caption = \"Base de Données mpg Augmentée\",\n          filter = \"top\")\n\n\n\n\n\n\n\n\n\nRésumé statistique des variables numériques\n\n\nstat_num &lt;- mpg_aumente %&gt;% \n  select_if(is.numeric) %&gt;% \n  select(!c(\"year\",\"cyl\")) %&gt;% \n  describe()\n# choix des statistique à visualiser \nstat_num[, c(\"mean\",\"sd\",\"median\",\"min\",\"max\",\"range\",\"skew\", \"kurtosis\")] %&gt;% knitr::kable(digits = 2, caption = \"Résumé Statistique des variables numériques\")\n\n\nRésumé Statistique des variables numériques\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmean\nsd\nmedian\nmin\nmax\nrange\nskew\nkurtosis\n\n\n\n\ndispl\n3.47\n1.29\n3.3\n1.6\n7.0\n5.4\n0.44\n-0.91\n\n\ncty\n16.86\n4.26\n17.0\n9.0\n35.0\n26.0\n0.79\n1.43\n\n\nhwy\n23.44\n5.95\n24.0\n12.0\n44.0\n32.0\n0.36\n0.14\n\n\navg_mpg\n20.15\n5.05\n20.5\n10.5\n39.5\n29.0\n0.54\n0.66\n\n\nco2_emission\n292.00\n75.97\n269.0\n140.0\n526.0\n386.0\n0.76\n0.30\n\n\n\n\n\n\nRésumé statistique des variables catégorielle (factor)\n\n\n mpg_aumente%&gt;% \n  mutate_if(is.character, as.factor) %&gt;% \n  select_if(is.factor) %&gt;% \n   select(-trans) %&gt;% \n  skimr::skim() %&gt;% \n   as_tibble() %&gt;% \n   mutate(variable = skim_variable,\n          modalite_unique = factor.n_unique,\n          top_modalite = factor.top_counts) %&gt;%\n   select(variable,modalite_unique,top_modalite ) %&gt;% \n   knitr::kable(align = \"c\", \n                caption = \"Résumé Statistique des variables numériques\")\n\n\nRésumé Statistique des variables numériques\n\n\n\n\n\n\n\nvariable\nmodalite_unique\ntop_modalite\n\n\n\n\nmanufacturer\n15\ndod: 37, toy: 34, vol: 27, for: 25\n\n\nmodel\n38\ncar: 11, ram: 10, civ: 9, dak: 9\n\n\ndrv\n3\nf: 106, 4: 103, r: 25\n\n\nfl\n5\nr: 168, p: 52, e: 8, d: 5\n\n\nclass\n7\nsuv: 62, com: 47, mid: 41, sub: 35\n\n\nfuel_efficiency\n3\nMoy: 120, Fai: 106, Ele: 8\n\n\ndispl_category\n3\nMoy: 141, Gra: 71, Pet: 22\n\n\n\n\n\n\n\n\n\n\n\n\n\nDistribustion de la variable displ\n\n\nmpg_aumente %&gt;% \n  ggplot(aes(displ))+\n  geom_histogram(bins = 25) +\n  theme_minimal()+\n  labs(\n    subtitle = \"Distribustion du nombre de cylindré (n = 234) \",\n    x = \"Nombre de cylindres\",\n    y = \"\",\n    caption = \"Source : mpg data - ggplot2_package\"\n  )\n\n\n\n\n\n\n\n\n\nDistribustion de la variable avg_mpg\n\n\nmpg_aumente %&gt;% \n  ggplot(aes(avg_mpg))+\n  geom_histogram(bins = 25) +\n  theme_minimal()+\n  labs(\n    title = \"Distribustion de la consommation moyenne (n = 234)\",\n    x = \"consomation de carburant(mille/gallon)\",\n    y = \"\",\n    caption = \"Source : mpg data - ggplot2_package\"\n  )\n\n\n\n\n\n\n\n\n\n\n\n\nDistribustion de la variable manufacturer\n\n\nmpg_2008 = mpg_aumente %&gt;% \n  filter(year == 2008,\n         !(class %in% c(\"2seater\",\"minivan\"))) %&gt;% \n  mutate(\n    class = case_when(\n      class %in% c(\"compact\", \"subcompact\") ~ '(Sub-)Compact',\n      class %in% c(\"pickup\", \"suv\") ~ 'Pickup/SUV',\n      TRUE ~ str_to_title(class)\n    ),\n    manufacturer = str_to_title(manufacturer),\n    manufacturer = fct_infreq(manufacturer) |&gt;  fct_rev()\n  )\n \n\ncolors &lt;- thematic::okabe_ito(4)\ngraphe_decomposé = mpg_2008 %&gt;% \n  ggplot(aes(y = manufacturer, fill = class))+\n  geom_bar()+\n  theme_minimal(base_size = 10,\n                base_family = 'Source Sans Pro'\n  )+\n  scale_fill_manual(values = colors[1:3])+\n  facet_wrap(vars(class))+\n  labs(x = element_blank(), y = element_blank())+\n  theme(\n    panel.grid.minor = element_blank(),\n    panel.grid.major.y = element_blank(),\n    legend.position = 'none'\n  )\n\n\ntotal_plot = mpg_2008 %&gt;% \n  ggplot(aes(y = manufacturer))+\n  geom_bar(fill = colors[4])+\n  geom_vline(xintercept = 0)+\n  theme_minimal(base_size = 10, base_family = 'Source Sans Pro')+\n  scale_fill_manual(values = colors[1:3])+\n  scale_y_discrete(labels = element_blank())+\n  facet_wrap(vars('Total'))+\n  labs(x = element_blank(), y = element_blank())+\n  theme(\n    panel.grid.minor = element_blank(),\n    panel.grid.major.y = element_blank(),\n    legend.position = 'none'\n  )\n\n\nlibrary(patchwork)\ngraphe_decomposé + total_plot+\n  plot_annotation(\n    title = 'Vehicules par entreprise et par classe',\n    theme = theme(\n      element_text(size=12, family = 'Merriweather')\n    )\n  )\n\n\n\n\n\n\n\n\n\nDistribustion de la variable trans\n\n\ncolors &lt;- c(\"dodgerblue4\",\"firebrick2\")\n\nmpg_aumente %&gt;% \n  mutate(\n   # transformation des modaités de trans en (auto ou manuel)\n    trans_two_modalities = case_when(\n      str_detect(trans, \"auto\") ~ \"auto\",\n      TRUE ~ \"manuel\"\n    ),\n    trans_two_modalities = str_to_title(trans_two_modalities)\n  ) %&gt;% \n  \n  group_by(trans_two_modalities) %&gt;% \n  summarise(nb_modalities = n(),\n            prop= round((nb_modalities*100)/234),\n            lab.ypos = cumsum(prop) - (0.3* prop),\n            prop_percent = str_c(prop, \"%\", sep = \"\")\n            ) %&gt;% \n  ungroup() %&gt;% \n  \n    ggplot(aes(x = 2,y = prop, fill = trans_two_modalities))+\n  geom_bar(width = 1,stat = \"identity\", color = \"white\")+\n  coord_polar(\"y\", start = 0)+\n  geom_text(aes(y = lab.ypos, label = prop_percent))+\n  scale_fill_manual(values =colors)+\n  theme_void()+\n  labs(subtitle =\"Distribustion des types de transmission des véhicules (n = 234)\",\n       caption = \"Source : mpg data - ggplot2_package\",\n       fill = \"Transmission\")+\n  xlim(0.5,2.5)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncov_matrix &lt;-  mpg_aumente %&gt;% \n  select_if(is.numeric) %&gt;% \n  cor()\n\ncov_tibble &lt;- cov_matrix %&gt;% \n  as_tibble(rownames = 'var_a') %&gt;% \n  pivot_longer(\n    -var_a,\n    names_to = \"var_b\",\n    values_to = \"correlation\"\n  )\n\nvar_names &lt;- unique(cov_tibble$var_a)\ncov_tibble_factored &lt;-  cov_tibble %&gt;% \n  mutate(\n    var_a = factor(var_a, levels = var_names),\n    var_b = factor(var_b, levels = rev(var_names))\n  )\n \n  \ncov_tibble_factored %&gt;% \n  ggplot(aes(var_a, var_b))+\n  geom_tile(aes(fill = correlation), color = \"black\")+\n  geom_text(aes(label = round(correlation,2)),\n            color = ifelse(\n              abs(cov_tibble_factored$correlation) &gt; 0.6,\n              'white',\n              'black'\n            ),\n            size = 3.5,\n            family = 'Source Sans Pro',\n            fontface = 'bold'\n            \n  )+\n  theme_minimal(\n    base_size = 12,\n    base_family = 'Source Sans Pro'\n  )+\n  labs(\n    x = element_blank(),\n    y = element_blank(),\n    fill = 'Correlation',\n    subtitle = \"Intensité des liaisons entre les variable numérique mpg\",\n    caption = \"Source : mpg data - ggplot2_package\",\n  )+\n  scale_fill_gradient2(\n    high = 'dodgerblue4',\n    mid = 'white',\n    low = 'firebrick2',\n    limits = c(-1,1),\n    midpoint = 0\n  )+\n  coord_cartesian(expand = FALSE)+\n  theme(legend.position = 'top')+\n  guides(\n    fill = guide_colorbar(\n      barwidth = unit(10, 'cm')\n    ),\n    x = guide_axis(n.dodge = 2)\n  )\n\n\n\n\n\n\n\n\nHypothèse :\n\nUne cylindré plus élevée est associée à une consommation plus faible (displ vs. avg_mpg )\nUne cylindré plus élevée est associée à des émissions de C02 plus élevée (displ & cyl vs. co2_emission)\nLes véhicules économes en villes le sont également sur autoroute (cty sv. hwy)\n\n\n\n\n\nComment la cylindrée influence -t-elle la consommation moyenne ? (avg_mpg vs. displ)\n\n\nnuage_point &lt;- \n  mpg_aumente %&gt;% \n  filter(cyl %in% c(2,4,6,8)) %&gt;% \n  ggplot(aes(displ,avg_mpg, fill = cyl))+\n  geom_point(shape =21, size = 3)+\n  geom_mark_ellipse(\n    data = mpg_aumente |&gt;\n      filter(displ &lt;= 2.5 & between(avg_mpg, 30,40)),\n    aes(\n      x0 = 3,\n      y0 = 35,\n      label = \"Consommation importante de carburant\",\n      \n    ),\n    fill = \"firebrick2\",\n    alpha = 0.1\n  ) +\n  labs(\n    x = \"Taille de la cylindrés du moteur (en littre)\",\n    y = \"Consommation moyenne de carburant (en mpg)\",\n    fill = \"Nombre de cylindres\",\n    subtitle = \"Distribustion de la consommation de carburant selon la cylindré\",\n    caption = \"Source : mpg data - ggplot2_package\",\n  )+\n  theme_minimal(base_size =10)+\n  theme(\n    legend.position = 'top',\n    legend.title = element_text(face = 'bold'),\n    panel.grid.minor = element_blank()\n  ) +\n  scale_fill_distiller(\n    palette = 'Blues',\n    direction = 1\n  )\n\nnuage_point +\n  guides(\n    fill = guide_coloursteps(\n      title.position = 'top',\n      barwidth = unit(7, 'cm')\n    )\n  )\n\n\n\n\n\n\n\n\n\nComment le type de transmission affecte -t-il la consommation moyenne ? (avg_mpg vs. trans)\n\n\nmpg_aumente %&gt;%\n  mutate(\n    trans = str_to_title(trans)\n  ) %&gt;% \n  group_by(trans) %&gt;% \n  summarise(avg_mpg= mean(avg_mpg)) %&gt;% \n  ungroup()  %&gt;% \n  ggplot(aes(x =avg_mpg, y = trans))+\n  geom_point(\n    color = 'dodgerblue4',\n    size = 4\n  )+\n  geom_text(\n    aes(\n      label = trans\n    ),\n    hjust = 1,\n    nudge_x = -0.09,\n    size = 3,\n    family = 'Merriweather'\n  )+\n  theme_minimal(\n    base_size = 10,\n    base_family = 'Merriweather'\n  )+\n  labs(subtitle = \"Evolution de la consommation moyenne par type de transmission\",\n       x = element_blank(),\n       y = element_blank(),\n       caption = \"Source : mpg data - ggplot2_package\"\n  )+\n  scale_x_continuous(\n    expand = expansion(mult = c(0.15,0.05))\n  )+\n  theme(\n    panel.grid.major.y = element_blank(),\n    plot.title.position = 'plot',\n    axis.text.y = element_blank()\n  )\n\n\n\n\n\n\n\n\n\nComment le type de traction inflence -t-il la consommation moyenne ? (avg_mpg vs. drv)\n\n\ncolors &lt;-  c(\"firebrick2\",'#009E73', 'dodgerblue4')\nnames(colors) &lt;-  unique(mpg_aumente$drv)\n\n\nmpg_aumente %&gt;% \n  ggplot(aes(avg_mpg, fill = drv, y = drv))+\n  geom_boxplot(width = 0.08) +\n  geom_dots(\n    side = 'bottom',\n    height = 0.55,\n    position = position_nudge(y = -0.075)\n  )+\n  stat_slab(\n    position = position_nudge(y = 0.075),\n    height = 0.75\n  )+\n  scale_fill_manual(values = colors)+\n  labs(\n    subtitle = \"Evolution de la consommation moyenne par type de traction\",\n    x = element_blank(),\n    y = element_blank(),\n    caption = \"Source : mpg data - ggplot2_package\"\n  )+\n  theme_minimal(\n    base_size = 10,\n    base_family = 'Merriweather'\n  )+\n  theme(\n    panel.grid.minor = element_blank(),\n    legend.position = 'none'\n  )"
  },
  {
    "objectID": "posts/post-with-code/index.html#presentation-du-projet",
    "href": "posts/post-with-code/index.html#presentation-du-projet",
    "title": "Analyse des donnees MPG",
    "section": "",
    "text": "Les données utilisées proviennent du jeu de données mpg inclut dans le package ggplot2. La base de données contient des informations sur la consommation de carburants de 234 vehicules, modèles de 1999 à 2008 ainsi que divers caractéristiques techniques et descriptives de ces véhicules.\n\n\n\n\nExplorer et analyser les relations entre les différentes variables du jeu de données mpg afin de fournir des recommandations aux acheteurs concernant la consommation de carburant des véhicules.\nspécifiquement il s’agirat :\n\nD’explorer les données : comprendre la structure des données , identifier les variables clés et détecter les anomalies, valeurs aberrantes ou manquantes, creer si possible de nouvelles variables\nRéaliser une analyse descriptive : resumer les principales caractéristiques des données à l’aide de statistiques descriptives\nAnalyser la consommation de varburant : Etudier les facteurs qui influent la consommation de carburant (milles par gallon [mpg ]\nModeliser : Construstruire des modele de regression pour predire la consommation\nVisualiser les resultats : Créer des visuels informatfs pour communuquer les résultats\n\n\n\n\n\n\nImporter les données mpg\nNetoyer les données\n\nvaleurs manquantes\nvaleurs aberrantes\ndoublons\n\nAnalyse exploratoire (EDA)\n\nfeature engineering\nstatistique descriptive\n\nVisualiser et communiquer les résultats\n\nBivariées des variables pertinentes\nmultivariées\nsegmentation (K-means)\n\n\n\n\n\n\nLes principaux facteurs qui influencent la consommation de carburant des vehicules sont identifiés\nLes insights sur les tendances et les patterns contenus dans la données sont fournit\nDes recommandations basées sur les résultats de l’analyse sont proposées\n\n\n\n\n\nL’ensemble des packages utilisés pour la réalisation de ce projet sont :\n\nlibrary(tidyverse)\nlibrary(naniar)\nlibrary(DT)\nlibrary(psych)\nlibrary(ggheatmap)\nlibrary(reshape2)\nlibrary(ggplot2)\nlibrary(ggforce)\nlibrary(glue)\nlibrary(ggdist)\n\n\n\n\n\n\n\nValeurs manquantes - valeurs en double\n\nLe graphique totalement gris montre que les données mpg ne contiennent pas de valeurs manquantes\nL’ensembles des données ne contiennent pas de doublon\n\n\n\nmpg %&gt;% \n  vis_miss()\n\n\n\n\n\n\n\n\n\n\n\n\n\nForatage des données\nTranformation de toutes les varibles de type chr en factor\n\n\nmpg_format &lt;- \n  mpg %&gt;% \n  mutate_if(is.character, as.factor)\n\n\nCréation de nouvelles variables\n\nconsommation moyenne de carburant (avg_mpg) [ avg_mpg = (cty + hwy) /2 ]\ncatégorisation de la consommation [ Faible : agv_mpg&lt;20; Moyenne : 20&lt;=avg_mpg&lt;=40 sinon Elevée ]\némission de CO2 des véhicules [ 1 gallon —&gt; 8.89 kg CO2 ; 1 mille/gallon —&gt;0.425 kg CO2 ]\ncatégorisation de la cylindré [ Petite: displ&lt;2.0, Moyenne : 2.0&lt;=displ&lt;=4.0 sinon Grande ]\n\n\n\nmpg_aumente &lt;- \n  mpg_format %&gt;% \n  mutate(\n    # calcule de avg_mpg\n    avg_mpg = (cty + hwy)/2,\n    # catégorisation de la consommation \n         fuel_efficiency = case_when(\n           avg_mpg &lt; 20 ~ \"Faible\",\n           avg_mpg &gt;= 20 & avg_mpg &lt;=30 ~ \"Moyenne\",\n           TRUE ~ \"Elevee\"\n         ),\n    # émission de CO2\n         co2_emission = round((8887/avg_mpg) * 0.621371),\n    # catégorisation de la cylindrée \n         displ_category = case_when(\n           displ &lt; 2.0 ~ \"Petite\",\n           displ &gt;= 2.0 & displ &lt;= 4.0 ~ \"Moyenne\",\n           TRUE ~ \"Grande\"\n         ))\n\n\n\n\n\nDictionnaire des données\n\n\nSource : Données mpg (ggplot2)\n\n\n\n\n\n\n\n\nVariables\nDescriptif\nNature\nModalités\n\n\n\n\n\nVariables initiales\n\n\n\n\nmanufacturer\nConstructeur de véhicule\nfactor\naudi, toyota, etc…\n\n\nmodel\nModèle du véhicule\nfactor\na4, a4 quatro, etc…\n\n\nyear\nAnnée du modèle\nint\n\n\n\ncyl\nNombre de cylindres\nint\n\n\n\ntrans\nType de transmission\nfactor\nauto, manuel\n\n\ndrv\nType de traction\nfactor\nf : avant, r : propultion , 4 : 4x4\n\n\ndispl\ncylindres du moteur (en littre)\nint\n\n\n\ncty\nConsommation en ville\nint\n\n\n\nhwy\nConsommation sur autoroute\nint\n\n\n\nfl\nType de carburant\nfactor\np , etc…\n\n\nclass\nclasse de véhicule\nfactor\nsuv, compact, etc…\n\n\n\nVariables ajoutées (crées)\n\n\n\n\navg_mpg\nconsommation moyenne de carburant\nint\n\n\n\nfuel_efficiency\ncatégorisation de la consommation\nfactor\nFaible, Moyen, etc…\n\n\nCO2_emission\nQuantité de CO2 émit par les véhicules\nint\n\n\n\ndispl_categoty\nCatégorisation de la cylindré\nfactor\nPetite, Moyenne, etc..\n\n\n\n\nPrésentation de la base de données\n\n\ndatatable(mpg_aumente, \n          extensions = 'Buttons',\n          options = list(\n            dom = 'Bfrtip',\n            button = c('copy', 'csv', 'excel', 'pdf', 'print'),\n            pageLength = 10,\n            lengthMenu = c(5, 10, 15, 20),\n            searching = TRUE,\n            ordering = TRUE,\n            scrollX = TRUE\n          ),\n          caption = \"Base de Données mpg Augmentée\",\n          filter = \"top\")\n\n\n\n\n\n\n\n\n\nRésumé statistique des variables numériques\n\n\nstat_num &lt;- mpg_aumente %&gt;% \n  select_if(is.numeric) %&gt;% \n  select(!c(\"year\",\"cyl\")) %&gt;% \n  describe()\n# choix des statistique à visualiser \nstat_num[, c(\"mean\",\"sd\",\"median\",\"min\",\"max\",\"range\",\"skew\", \"kurtosis\")] %&gt;% knitr::kable(digits = 2, caption = \"Résumé Statistique des variables numériques\")\n\n\nRésumé Statistique des variables numériques\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmean\nsd\nmedian\nmin\nmax\nrange\nskew\nkurtosis\n\n\n\n\ndispl\n3.47\n1.29\n3.3\n1.6\n7.0\n5.4\n0.44\n-0.91\n\n\ncty\n16.86\n4.26\n17.0\n9.0\n35.0\n26.0\n0.79\n1.43\n\n\nhwy\n23.44\n5.95\n24.0\n12.0\n44.0\n32.0\n0.36\n0.14\n\n\navg_mpg\n20.15\n5.05\n20.5\n10.5\n39.5\n29.0\n0.54\n0.66\n\n\nco2_emission\n292.00\n75.97\n269.0\n140.0\n526.0\n386.0\n0.76\n0.30\n\n\n\n\n\n\nRésumé statistique des variables catégorielle (factor)\n\n\n mpg_aumente%&gt;% \n  mutate_if(is.character, as.factor) %&gt;% \n  select_if(is.factor) %&gt;% \n   select(-trans) %&gt;% \n  skimr::skim() %&gt;% \n   as_tibble() %&gt;% \n   mutate(variable = skim_variable,\n          modalite_unique = factor.n_unique,\n          top_modalite = factor.top_counts) %&gt;%\n   select(variable,modalite_unique,top_modalite ) %&gt;% \n   knitr::kable(align = \"c\", \n                caption = \"Résumé Statistique des variables numériques\")\n\n\nRésumé Statistique des variables numériques\n\n\n\n\n\n\n\nvariable\nmodalite_unique\ntop_modalite\n\n\n\n\nmanufacturer\n15\ndod: 37, toy: 34, vol: 27, for: 25\n\n\nmodel\n38\ncar: 11, ram: 10, civ: 9, dak: 9\n\n\ndrv\n3\nf: 106, 4: 103, r: 25\n\n\nfl\n5\nr: 168, p: 52, e: 8, d: 5\n\n\nclass\n7\nsuv: 62, com: 47, mid: 41, sub: 35\n\n\nfuel_efficiency\n3\nMoy: 120, Fai: 106, Ele: 8\n\n\ndispl_category\n3\nMoy: 141, Gra: 71, Pet: 22\n\n\n\n\n\n\n\n\n\n\n\n\n\nDistribustion de la variable displ\n\n\nmpg_aumente %&gt;% \n  ggplot(aes(displ))+\n  geom_histogram(bins = 25) +\n  theme_minimal()+\n  labs(\n    subtitle = \"Distribustion du nombre de cylindré (n = 234) \",\n    x = \"Nombre de cylindres\",\n    y = \"\",\n    caption = \"Source : mpg data - ggplot2_package\"\n  )\n\n\n\n\n\n\n\n\n\nDistribustion de la variable avg_mpg\n\n\nmpg_aumente %&gt;% \n  ggplot(aes(avg_mpg))+\n  geom_histogram(bins = 25) +\n  theme_minimal()+\n  labs(\n    title = \"Distribustion de la consommation moyenne (n = 234)\",\n    x = \"consomation de carburant(mille/gallon)\",\n    y = \"\",\n    caption = \"Source : mpg data - ggplot2_package\"\n  )\n\n\n\n\n\n\n\n\n\n\n\n\nDistribustion de la variable manufacturer\n\n\nmpg_2008 = mpg_aumente %&gt;% \n  filter(year == 2008,\n         !(class %in% c(\"2seater\",\"minivan\"))) %&gt;% \n  mutate(\n    class = case_when(\n      class %in% c(\"compact\", \"subcompact\") ~ '(Sub-)Compact',\n      class %in% c(\"pickup\", \"suv\") ~ 'Pickup/SUV',\n      TRUE ~ str_to_title(class)\n    ),\n    manufacturer = str_to_title(manufacturer),\n    manufacturer = fct_infreq(manufacturer) |&gt;  fct_rev()\n  )\n \n\ncolors &lt;- thematic::okabe_ito(4)\ngraphe_decomposé = mpg_2008 %&gt;% \n  ggplot(aes(y = manufacturer, fill = class))+\n  geom_bar()+\n  theme_minimal(base_size = 10,\n                base_family = 'Source Sans Pro'\n  )+\n  scale_fill_manual(values = colors[1:3])+\n  facet_wrap(vars(class))+\n  labs(x = element_blank(), y = element_blank())+\n  theme(\n    panel.grid.minor = element_blank(),\n    panel.grid.major.y = element_blank(),\n    legend.position = 'none'\n  )\n\n\ntotal_plot = mpg_2008 %&gt;% \n  ggplot(aes(y = manufacturer))+\n  geom_bar(fill = colors[4])+\n  geom_vline(xintercept = 0)+\n  theme_minimal(base_size = 10, base_family = 'Source Sans Pro')+\n  scale_fill_manual(values = colors[1:3])+\n  scale_y_discrete(labels = element_blank())+\n  facet_wrap(vars('Total'))+\n  labs(x = element_blank(), y = element_blank())+\n  theme(\n    panel.grid.minor = element_blank(),\n    panel.grid.major.y = element_blank(),\n    legend.position = 'none'\n  )\n\n\nlibrary(patchwork)\ngraphe_decomposé + total_plot+\n  plot_annotation(\n    title = 'Vehicules par entreprise et par classe',\n    theme = theme(\n      element_text(size=12, family = 'Merriweather')\n    )\n  )\n\n\n\n\n\n\n\n\n\nDistribustion de la variable trans\n\n\ncolors &lt;- c(\"dodgerblue4\",\"firebrick2\")\n\nmpg_aumente %&gt;% \n  mutate(\n   # transformation des modaités de trans en (auto ou manuel)\n    trans_two_modalities = case_when(\n      str_detect(trans, \"auto\") ~ \"auto\",\n      TRUE ~ \"manuel\"\n    ),\n    trans_two_modalities = str_to_title(trans_two_modalities)\n  ) %&gt;% \n  \n  group_by(trans_two_modalities) %&gt;% \n  summarise(nb_modalities = n(),\n            prop= round((nb_modalities*100)/234),\n            lab.ypos = cumsum(prop) - (0.3* prop),\n            prop_percent = str_c(prop, \"%\", sep = \"\")\n            ) %&gt;% \n  ungroup() %&gt;% \n  \n    ggplot(aes(x = 2,y = prop, fill = trans_two_modalities))+\n  geom_bar(width = 1,stat = \"identity\", color = \"white\")+\n  coord_polar(\"y\", start = 0)+\n  geom_text(aes(y = lab.ypos, label = prop_percent))+\n  scale_fill_manual(values =colors)+\n  theme_void()+\n  labs(subtitle =\"Distribustion des types de transmission des véhicules (n = 234)\",\n       caption = \"Source : mpg data - ggplot2_package\",\n       fill = \"Transmission\")+\n  xlim(0.5,2.5)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncov_matrix &lt;-  mpg_aumente %&gt;% \n  select_if(is.numeric) %&gt;% \n  cor()\n\ncov_tibble &lt;- cov_matrix %&gt;% \n  as_tibble(rownames = 'var_a') %&gt;% \n  pivot_longer(\n    -var_a,\n    names_to = \"var_b\",\n    values_to = \"correlation\"\n  )\n\nvar_names &lt;- unique(cov_tibble$var_a)\ncov_tibble_factored &lt;-  cov_tibble %&gt;% \n  mutate(\n    var_a = factor(var_a, levels = var_names),\n    var_b = factor(var_b, levels = rev(var_names))\n  )\n \n  \ncov_tibble_factored %&gt;% \n  ggplot(aes(var_a, var_b))+\n  geom_tile(aes(fill = correlation), color = \"black\")+\n  geom_text(aes(label = round(correlation,2)),\n            color = ifelse(\n              abs(cov_tibble_factored$correlation) &gt; 0.6,\n              'white',\n              'black'\n            ),\n            size = 3.5,\n            family = 'Source Sans Pro',\n            fontface = 'bold'\n            \n  )+\n  theme_minimal(\n    base_size = 12,\n    base_family = 'Source Sans Pro'\n  )+\n  labs(\n    x = element_blank(),\n    y = element_blank(),\n    fill = 'Correlation',\n    subtitle = \"Intensité des liaisons entre les variable numérique mpg\",\n    caption = \"Source : mpg data - ggplot2_package\",\n  )+\n  scale_fill_gradient2(\n    high = 'dodgerblue4',\n    mid = 'white',\n    low = 'firebrick2',\n    limits = c(-1,1),\n    midpoint = 0\n  )+\n  coord_cartesian(expand = FALSE)+\n  theme(legend.position = 'top')+\n  guides(\n    fill = guide_colorbar(\n      barwidth = unit(10, 'cm')\n    ),\n    x = guide_axis(n.dodge = 2)\n  )\n\n\n\n\n\n\n\n\nHypothèse :\n\nUne cylindré plus élevée est associée à une consommation plus faible (displ vs. avg_mpg )\nUne cylindré plus élevée est associée à des émissions de C02 plus élevée (displ & cyl vs. co2_emission)\nLes véhicules économes en villes le sont également sur autoroute (cty sv. hwy)\n\n\n\n\n\nComment la cylindrée influence -t-elle la consommation moyenne ? (avg_mpg vs. displ)\n\n\nnuage_point &lt;- \n  mpg_aumente %&gt;% \n  filter(cyl %in% c(2,4,6,8)) %&gt;% \n  ggplot(aes(displ,avg_mpg, fill = cyl))+\n  geom_point(shape =21, size = 3)+\n  geom_mark_ellipse(\n    data = mpg_aumente |&gt;\n      filter(displ &lt;= 2.5 & between(avg_mpg, 30,40)),\n    aes(\n      x0 = 3,\n      y0 = 35,\n      label = \"Consommation importante de carburant\",\n      \n    ),\n    fill = \"firebrick2\",\n    alpha = 0.1\n  ) +\n  labs(\n    x = \"Taille de la cylindrés du moteur (en littre)\",\n    y = \"Consommation moyenne de carburant (en mpg)\",\n    fill = \"Nombre de cylindres\",\n    subtitle = \"Distribustion de la consommation de carburant selon la cylindré\",\n    caption = \"Source : mpg data - ggplot2_package\",\n  )+\n  theme_minimal(base_size =10)+\n  theme(\n    legend.position = 'top',\n    legend.title = element_text(face = 'bold'),\n    panel.grid.minor = element_blank()\n  ) +\n  scale_fill_distiller(\n    palette = 'Blues',\n    direction = 1\n  )\n\nnuage_point +\n  guides(\n    fill = guide_coloursteps(\n      title.position = 'top',\n      barwidth = unit(7, 'cm')\n    )\n  )\n\n\n\n\n\n\n\n\n\nComment le type de transmission affecte -t-il la consommation moyenne ? (avg_mpg vs. trans)\n\n\nmpg_aumente %&gt;%\n  mutate(\n    trans = str_to_title(trans)\n  ) %&gt;% \n  group_by(trans) %&gt;% \n  summarise(avg_mpg= mean(avg_mpg)) %&gt;% \n  ungroup()  %&gt;% \n  ggplot(aes(x =avg_mpg, y = trans))+\n  geom_point(\n    color = 'dodgerblue4',\n    size = 4\n  )+\n  geom_text(\n    aes(\n      label = trans\n    ),\n    hjust = 1,\n    nudge_x = -0.09,\n    size = 3,\n    family = 'Merriweather'\n  )+\n  theme_minimal(\n    base_size = 10,\n    base_family = 'Merriweather'\n  )+\n  labs(subtitle = \"Evolution de la consommation moyenne par type de transmission\",\n       x = element_blank(),\n       y = element_blank(),\n       caption = \"Source : mpg data - ggplot2_package\"\n  )+\n  scale_x_continuous(\n    expand = expansion(mult = c(0.15,0.05))\n  )+\n  theme(\n    panel.grid.major.y = element_blank(),\n    plot.title.position = 'plot',\n    axis.text.y = element_blank()\n  )\n\n\n\n\n\n\n\n\n\nComment le type de traction inflence -t-il la consommation moyenne ? (avg_mpg vs. drv)\n\n\ncolors &lt;-  c(\"firebrick2\",'#009E73', 'dodgerblue4')\nnames(colors) &lt;-  unique(mpg_aumente$drv)\n\n\nmpg_aumente %&gt;% \n  ggplot(aes(avg_mpg, fill = drv, y = drv))+\n  geom_boxplot(width = 0.08) +\n  geom_dots(\n    side = 'bottom',\n    height = 0.55,\n    position = position_nudge(y = -0.075)\n  )+\n  stat_slab(\n    position = position_nudge(y = 0.075),\n    height = 0.75\n  )+\n  scale_fill_manual(values = colors)+\n  labs(\n    subtitle = \"Evolution de la consommation moyenne par type de traction\",\n    x = element_blank(),\n    y = element_blank(),\n    caption = \"Source : mpg data - ggplot2_package\"\n  )+\n  theme_minimal(\n    base_size = 10,\n    base_family = 'Merriweather'\n  )+\n  theme(\n    panel.grid.minor = element_blank(),\n    legend.position = 'none'\n  )"
  },
  {
    "objectID": "projets.html",
    "href": "projets.html",
    "title": "Mon Portfolio",
    "section": "",
    "text": "30-days-of-r\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAnalyse des données environnementale\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntidyverse-guide\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nquarto-beginners\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDécouvrez le Package Simputation de R\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nR\n\n\nimputation\n\n\n\n\n\n\n\n\n\nFeb 14, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nAnalyse des resultats des Jeux Olynpiques\n\n\n\n\n\n\ncode\n\n\nR\n\n\nanalysis\n\n\ndashboard\n\n\n\n\n\n\n\n\n\nFeb 13, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nAnalyse des donnees MPG\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nR\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nFeb 11, 2025\n\n\nAnasse Yahanan\n\n\n\n\n\n\n\n\n\n\n\n\nBienvenue sur mon blog\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nFeb 8, 2024\n\n\nAnassé Yahanan\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/EDA/index.html",
    "href": "posts/EDA/index.html",
    "title": "Visualisation des données avec Python",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np"
  },
  {
    "objectID": "posts/analyse-with-python/index.html",
    "href": "posts/analyse-with-python/index.html",
    "title": "Visualiation des données",
    "section": "",
    "text": "Vous envisagez de sortir voir un film. pour ce faire vous decidez de faire confiance aux critiques et évaluation en ligne. Cependant vous êtes convaincu l’entreprise qui affichie les notes gagne de l’argent en vandant les billets. Aussi une question vous vient à l’esprit : Est-ce que l’entreprise à tendance à sur-évaluer les films avec de meilleurs notes que celle qu’ils devraient obtenir ?\n\n\n\nUtilisez les compétences en pandas et data viz pour déterminer si les notes de Fandango en 2015 etaient orientées vers une meilleures évaluationnotation des films dans le but de vendre plus de billet.\n\n\n\nComparer les note des Fandango avec celles de l’article du site 538 Clique ici\n\n\n\n\nData 1 : all_sites_scores.csv\nce dataset contient tous les films qui ont une note Rotten Tomatoes, une note RT User, une note Metacritic, une note note Metacritic User, une note IMDb, et au moins 30 critiques de fans sur Fandango. Les données ont été extraites de 24 août 2015\n\nData 2 : fandango_scrape.csv\ncontient tous les films de l’article 538 tirés de Fandango"
  },
  {
    "objectID": "posts/analyse-with-python/index.html#projet-de-data-science",
    "href": "posts/analyse-with-python/index.html#projet-de-data-science",
    "title": "Visualiation des données",
    "section": "",
    "text": "Vous envisagez de sortir voir un film. pour ce faire vous decidez de faire confiance aux critiques et évaluation en ligne. Cependant vous êtes convaincu l’entreprise qui affichie les notes gagne de l’argent en vandant les billets. Aussi une question vous vient à l’esprit : Est-ce que l’entreprise à tendance à sur-évaluer les films avec de meilleurs notes que celle qu’ils devraient obtenir ?\n\n\n\nUtilisez les compétences en pandas et data viz pour déterminer si les notes de Fandango en 2015 etaient orientées vers une meilleures évaluationnotation des films dans le but de vendre plus de billet.\n\n\n\nComparer les note des Fandango avec celles de l’article du site 538 Clique ici\n\n\n\n\nData 1 : all_sites_scores.csv\nce dataset contient tous les films qui ont une note Rotten Tomatoes, une note RT User, une note Metacritic, une note note Metacritic User, une note IMDb, et au moins 30 critiques de fans sur Fandango. Les données ont été extraites de 24 août 2015\n\nData 2 : fandango_scrape.csv\ncontient tous les films de l’article 538 tirés de Fandango"
  },
  {
    "objectID": "posts/analyse-with-python/index.html#section",
    "href": "posts/analyse-with-python/index.html#section",
    "title": "Visualiation des données",
    "section": "",
    "text": "Importation des bibliothèques\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt \n\n\n\nImportation du premier dataset\n\nImportoation du dataset fandango_scrape.csv\n\n\nfandango = pd.read_csv(\"fandango_scrape.csv\")\n\n\nExploration des proprités du datasets et head\n\n\nfandango.head()\n\n\n\n\n\n\n\n\nFILM\nSTARS\nRATING\nVOTES\n\n\n\n\n0\nFifty Shades of Grey (2015)\n4.0\n3.9\n34846\n\n\n1\nJurassic World (2015)\n4.5\n4.5\n34390\n\n\n2\nAmerican Sniper (2015)\n5.0\n4.8\n34085\n\n\n3\nFurious 7 (2015)\n5.0\n4.8\n33538\n\n\n4\nInside Out (2015)\n4.5\n4.5\n15749\n\n\n\n\n\n\n\n\nfandango.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 504 entries, 0 to 503\nData columns (total 4 columns):\n #   Column  Non-Null Count  Dtype  \n---  ------  --------------  -----  \n 0   FILM    504 non-null    object \n 1   STARS   504 non-null    float64\n 2   RATING  504 non-null    float64\n 3   VOTES   504 non-null    int64  \ndtypes: float64(2), int64(1), object(1)\nmemory usage: 15.9+ KB\n\n\n\nfandango.describe().transpose()\n\n\n\n\n\n\n\n\ncount\nmean\nstd\nmin\n25%\n50%\n75%\nmax\n\n\n\n\nSTARS\n504.0\n3.558532\n1.563133\n0.0\n3.5\n4.0\n4.50\n5.0\n\n\nRATING\n504.0\n3.375794\n1.491223\n0.0\n3.1\n3.8\n4.30\n5.0\n\n\nVOTES\n504.0\n1147.863095\n3830.583136\n0.0\n3.0\n18.5\n189.75\n34846.0\n\n\n\n\n\n\n\n\nExplorons la popularité d’un film et son classement\n\n\nfig, ax = plt.subplots(figsize = (9,5))\n\n# graphique \nscatter = ax.scatter(\n  x = fandango['RATING'],\n  y = fandango['VOTES'],\n  c = fandango['RATING'],\n)\n\n# personnalisation\nax.set(\n  title = \"Popularité des films et leurs classement\",\n  xlabel = \"Notes attribuées par les spectateurs (RATING)\",\n  ylabel = \"Classement par vote (VOTE)\"\n  )\n\nplt.show()\n\n\n\n\n\n\n\n\nLa popularité des films semblent être en accord avec les votes il nous faudra explorer la correlation etre les variables pour comprendre si les notes (STARS) afichées par fandango évoluent dans le même sens que la note des spectateus (RATING)\n\nExplorons la corrélation entre les variables\n\n\nfandango[['STARS','RATING', 'VOTES']].corr()\n\n\n\n\n\n\n\n\nSTARS\nRATING\nVOTES\n\n\n\n\nSTARS\n1.000000\n0.994696\n0.164218\n\n\nRATING\n0.994696\n1.000000\n0.163764\n\n\nVOTES\n0.164218\n0.163764\n1.000000\n\n\n\n\n\n\n\nles variables STARS et RATING ne sont pas parfaitement corrélées. hypotheses :Il semble y avoir un ecart entre les scores attribués par les spectateurs aux films et celles attribuées a fandango\n\nCréation d’une nouvele colonnes contenant la date de sortie des films\n\n\ntitle = 'Nom du titre du film (Annee)'\n\n\ntitle.split('(')[-1].replace(')', '')\n\n'Annee'\n\n\n\nfandango['YEAR'] =  fandango['FILM'].apply(lambda title: title.split('(')[-1].replace(')', '') )\n\n\nfandango\n\n\n\n\n\n\n\n\nFILM\nSTARS\nRATING\nVOTES\nYEAR\n\n\n\n\n0\nFifty Shades of Grey (2015)\n4.0\n3.9\n34846\n2015\n\n\n1\nJurassic World (2015)\n4.5\n4.5\n34390\n2015\n\n\n2\nAmerican Sniper (2015)\n5.0\n4.8\n34085\n2015\n\n\n3\nFurious 7 (2015)\n5.0\n4.8\n33538\n2015\n\n\n4\nInside Out (2015)\n4.5\n4.5\n15749\n2015\n\n\n...\n...\n...\n...\n...\n...\n\n\n499\nValiyavan (2015)\n0.0\n0.0\n0\n2015\n\n\n500\nWWE SummerSlam 2015 (2015)\n0.0\n0.0\n0\n2015\n\n\n501\nYagavarayinum Naa Kaakka (2015)\n0.0\n0.0\n0\n2015\n\n\n502\nYesterday, Today and Tomorrow (1964)\n0.0\n0.0\n0\n1964\n\n\n503\nZarafa (2012)\n0.0\n0.0\n0\n2012\n\n\n\n\n504 rows × 5 columns\n\n\n\n\nExplorons le nombre de film par Année\n\n\nfandango['YEAR'].value_counts()\n\nYEAR\n2015    478\n2014     23\n2016      1\n1964      1\n2012      1\nName: count, dtype: int64\n\n\n\nExplorons le top 10 des films avec le plus grand nombre de votes\n\n\nfandango.nlargest(10, 'VOTES')\n\n\n\n\n\n\n\n\nFILM\nSTARS\nRATING\nVOTES\nYEAR\n\n\n\n\n0\nFifty Shades of Grey (2015)\n4.0\n3.9\n34846\n2015\n\n\n1\nJurassic World (2015)\n4.5\n4.5\n34390\n2015\n\n\n2\nAmerican Sniper (2015)\n5.0\n4.8\n34085\n2015\n\n\n3\nFurious 7 (2015)\n5.0\n4.8\n33538\n2015\n\n\n4\nInside Out (2015)\n4.5\n4.5\n15749\n2015\n\n\n5\nThe Hobbit: The Battle of the Five Armies (2014)\n4.5\n4.3\n15337\n2014\n\n\n6\nKingsman: The Secret Service (2015)\n4.5\n4.2\n15205\n2015\n\n\n7\nMinions (2015)\n4.0\n4.0\n14998\n2015\n\n\n8\nAvengers: Age of Ultron (2015)\n5.0\n4.5\n14846\n2015\n\n\n9\nInto the Woods (2014)\n3.5\n3.4\n13055\n2014\n\n\n\n\n\n\n\n\nExplorons le nombre de films avec 0/aucun votes\n\n\nfandango[fandango['VOTES'] == 0]\n\n\n\n\n\n\n\n\nFILM\nSTARS\nRATING\nVOTES\nYEAR\n\n\n\n\n435\n6 Years (2015)\n0.0\n0.0\n0\n2015\n\n\n436\n7 Minutes (2015)\n0.0\n0.0\n0\n2015\n\n\n437\nA Year in Champagne (2015)\n0.0\n0.0\n0\n2015\n\n\n438\nBalls Out (2015)\n0.0\n0.0\n0\n2015\n\n\n439\nBefore I Wake (2015)\n0.0\n0.0\n0\n2015\n\n\n...\n...\n...\n...\n...\n...\n\n\n499\nValiyavan (2015)\n0.0\n0.0\n0\n2015\n\n\n500\nWWE SummerSlam 2015 (2015)\n0.0\n0.0\n0\n2015\n\n\n501\nYagavarayinum Naa Kaakka (2015)\n0.0\n0.0\n0\n2015\n\n\n502\nYesterday, Today and Tomorrow (1964)\n0.0\n0.0\n0\n1964\n\n\n503\nZarafa (2012)\n0.0\n0.0\n0\n2012\n\n\n\n\n69 rows × 5 columns\n\n\n\n\nExtraction des films qui ont connu au moins un vote\n\n\ndf_fandango = fandango[(fandango['VOTES'] &gt; 0)]\ndf_fandango\n\n\n\n\n\n\n\n\nFILM\nSTARS\nRATING\nVOTES\nYEAR\n\n\n\n\n0\nFifty Shades of Grey (2015)\n4.0\n3.9\n34846\n2015\n\n\n1\nJurassic World (2015)\n4.5\n4.5\n34390\n2015\n\n\n2\nAmerican Sniper (2015)\n5.0\n4.8\n34085\n2015\n\n\n3\nFurious 7 (2015)\n5.0\n4.8\n33538\n2015\n\n\n4\nInside Out (2015)\n4.5\n4.5\n15749\n2015\n\n\n...\n...\n...\n...\n...\n...\n\n\n430\nThat Sugar Film (2015)\n5.0\n5.0\n1\n2015\n\n\n431\nThe Intern (2015)\n5.0\n5.0\n1\n2015\n\n\n432\nThe Park Bench (2015)\n5.0\n5.0\n1\n2015\n\n\n433\nThe Wanted 18 (2015)\n5.0\n5.0\n1\n2015\n\n\n434\nZ For Zachariah (2015)\n5.0\n5.0\n1\n2015\n\n\n\n\n435 rows × 5 columns\n\n\n\n\nCreons un graphique qui affiche la distribustion des note (STARS) par rapport à l’évolution réelle des votes (RATTING)"
  },
  {
    "objectID": "posts/dashboard/index.html",
    "href": "posts/dashboard/index.html",
    "title": "Analyse des resultats des Jeux Olynpiques",
    "section": "",
    "text": "En raison de la Seconde Guerre mondiale, aucun jeu olympique n’a été organisé en 1940 et 1944\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTotal de Medailles Or:\n2363\nUnited States\n\n\nTotal de Medailles Argent:\n1251\nUnited States\n\n\nTotal de Medailles bronzes:\n1126\nUnited States\n\n\n\n\n\nLes équipes sont classées par ordre décroissant du nombre total de médailles\n\n\n\n\n\n\n\n\nTeam\nGold\nSilver\nBronze\n\n\n\n\nUnited States\n2363\n1251\n1126\n\n\nSoviet Union\n830\n635\n596\n\n\nGermany\n568\n515\n614\n\n\nGreat Britain\n501\n594\n563\n\n\nFrance\n425\n490\n515\n\n\nItaly\n492\n469\n425\n\n\nAustralia\n338\n450\n506\n\n\nHungary\n432\n328\n363\n\n\nSweden\n326\n356\n332\n\n\nChina\n334\n317\n258\n\n\nRussia\n296\n278\n324\n\n\nNetherlands\n235\n283\n350\n\n\nJapan\n230\n287\n333\n\n\nEast Germany\n339\n277\n227\n\n\nCanada\n133\n224\n313\n\n\nRomania\n161\n200\n290\n\n\nDenmark\n168\n218\n166\n\n\nSouth Korea\n171\n206\n175\n\n\nPoland\n111\n185\n242\n\n\nWest Germany\n144\n172\n188\n\n\nSpain\n109\n243\n135\n\n\nBrazil\n109\n175\n191\n\n\nNorway\n148\n165\n154\n\n\nFinland\n132\n118\n200\n\n\nCuba\n164\n127\n116\n\n\nSwitzerland\n96\n175\n136\n\n\nBelgium\n93\n157\n152\n\n\nYugoslavia\n130\n161\n92\n\n\nBulgaria\n53\n142\n141\n\n\nCzechoslovakia\n79\n144\n107\n\n\n\n\n\n\n\n\n\nLes équipes sont classées par ordre croissant du nombre total de médailles\n\n\n\n\n\n\n\n\nTeam\nGold\nSilver\nBronze\n\n\n\n\nBarbados\n0\n0\n1\n\n\nBermuda\n0\n0\n1\n\n\nBonaparte\n1\n0\n0\n\n\nBotswana\n0\n1\n0\n\n\nBrynhild\n0\n1\n0\n\n\nCamille\n1\n0\n0\n\n\nCarabinier\n1\n0\n0\n\n\nCicely\n1\n0\n0\n\n\nClearwater\n0\n0\n1\n\n\nCyprus\n0\n1\n0\n\n\nDigby\n0\n0\n1\n\n\nDjibouti\n0\n0\n1\n\n\nDon Schufro\n0\n0\n1\n\n\nElvis Va\n1\n0\n0\n\n\nEritrea\n0\n0\n1\n\n\nFantlet\n1\n0\n0\n\n\nFemur\n1\n0\n0\n\n\nFormosa\n0\n0\n1\n\n\nFrimousse\n0\n0\n1\n\n\nGabon\n0\n1\n0\n\n\nGuatemala\n0\n1\n0\n\n\nGuyana\n0\n0\n1\n\n\nIraq\n0\n0\n1\n\n\nJordan\n1\n0\n0\n\n\nKosovo\n1\n0\n0\n\n\nLaurea\n0\n0\n1\n\n\nMacedonia\n0\n0\n1\n\n\nMauritius\n0\n0\n1\n\n\nMignon\n0\n0\n1\n\n\nMonaco\n0\n0\n1"
  },
  {
    "objectID": "posts/dashboard/index.html#column---medailles-par-sport-et-par-annee",
    "href": "posts/dashboard/index.html#column---medailles-par-sport-et-par-annee",
    "title": "Analyse des resultats des Jeux Olynpiques",
    "section": "",
    "text": "En raison de la Seconde Guerre mondiale, aucun jeu olympique n’a été organisé en 1940 et 1944"
  },
  {
    "objectID": "posts/dashboard/index.html#column---medailles-par-pays",
    "href": "posts/dashboard/index.html#column---medailles-par-pays",
    "title": "Analyse des resultats des Jeux Olynpiques",
    "section": "",
    "text": "Total de Medailles Or:\n2363\nUnited States\n\n\nTotal de Medailles Argent:\n1251\nUnited States\n\n\nTotal de Medailles bronzes:\n1126\nUnited States\n\n\n\n\n\nLes équipes sont classées par ordre décroissant du nombre total de médailles\n\n\n\n\n\n\n\n\nTeam\nGold\nSilver\nBronze\n\n\n\n\nUnited States\n2363\n1251\n1126\n\n\nSoviet Union\n830\n635\n596\n\n\nGermany\n568\n515\n614\n\n\nGreat Britain\n501\n594\n563\n\n\nFrance\n425\n490\n515\n\n\nItaly\n492\n469\n425\n\n\nAustralia\n338\n450\n506\n\n\nHungary\n432\n328\n363\n\n\nSweden\n326\n356\n332\n\n\nChina\n334\n317\n258\n\n\nRussia\n296\n278\n324\n\n\nNetherlands\n235\n283\n350\n\n\nJapan\n230\n287\n333\n\n\nEast Germany\n339\n277\n227\n\n\nCanada\n133\n224\n313\n\n\nRomania\n161\n200\n290\n\n\nDenmark\n168\n218\n166\n\n\nSouth Korea\n171\n206\n175\n\n\nPoland\n111\n185\n242\n\n\nWest Germany\n144\n172\n188\n\n\nSpain\n109\n243\n135\n\n\nBrazil\n109\n175\n191\n\n\nNorway\n148\n165\n154\n\n\nFinland\n132\n118\n200\n\n\nCuba\n164\n127\n116\n\n\nSwitzerland\n96\n175\n136\n\n\nBelgium\n93\n157\n152\n\n\nYugoslavia\n130\n161\n92\n\n\nBulgaria\n53\n142\n141\n\n\nCzechoslovakia\n79\n144\n107\n\n\n\n\n\n\n\n\n\nLes équipes sont classées par ordre croissant du nombre total de médailles\n\n\n\n\n\n\n\n\nTeam\nGold\nSilver\nBronze\n\n\n\n\nBarbados\n0\n0\n1\n\n\nBermuda\n0\n0\n1\n\n\nBonaparte\n1\n0\n0\n\n\nBotswana\n0\n1\n0\n\n\nBrynhild\n0\n1\n0\n\n\nCamille\n1\n0\n0\n\n\nCarabinier\n1\n0\n0\n\n\nCicely\n1\n0\n0\n\n\nClearwater\n0\n0\n1\n\n\nCyprus\n0\n1\n0\n\n\nDigby\n0\n0\n1\n\n\nDjibouti\n0\n0\n1\n\n\nDon Schufro\n0\n0\n1\n\n\nElvis Va\n1\n0\n0\n\n\nEritrea\n0\n0\n1\n\n\nFantlet\n1\n0\n0\n\n\nFemur\n1\n0\n0\n\n\nFormosa\n0\n0\n1\n\n\nFrimousse\n0\n0\n1\n\n\nGabon\n0\n1\n0\n\n\nGuatemala\n0\n1\n0\n\n\nGuyana\n0\n0\n1\n\n\nIraq\n0\n0\n1\n\n\nJordan\n1\n0\n0\n\n\nKosovo\n1\n0\n0\n\n\nLaurea\n0\n0\n1\n\n\nMacedonia\n0\n0\n1\n\n\nMauritius\n0\n0\n1\n\n\nMignon\n0\n0\n1\n\n\nMonaco\n0\n0\n1"
  },
  {
    "objectID": "posts/simputation/index.html",
    "href": "posts/simputation/index.html",
    "title": "Découvrez le Package Simputation de R",
    "section": "",
    "text": "Introduction\nDans le monde de l’analyse de données, l’imputation est une étape cruciale pour gérer les valeurs manquantes. Le package Simputation de R offre une solution puissante et flexible pour imputer les données manquantes de manière simple et efficace. Dans cet article, nous allons explorer les fonctionnalités de ce package, comprendre son utilité, et voir des exemples concrets d’application.\n\nQu’est-ce que le Package Simputation ?\nSimputation est un package R conçu pour faciliter l’imputation des données manquantes. Il propose une interface unifiée pour plusieurs méthodes d’imputation, permettant aux utilisateurs de choisir la méthode la plus adaptée à leurs besoins. Que vous travailliez avec des données numériques, catégorielles, ou même des données complexes, Simputation offre des outils pour gérer ces situations.\n\n\nPourquoi Utiliser Simputation ?\n\nFlexibilité : Supporte une variété de méthodes d’imputation, y compris la régression, la moyenne, la médiane, et bien d’autres.\nSimplicité : Une syntaxe intuitive qui permet de réaliser des imputations en quelques lignes de code.\nIntégration : Fonctionne parfaitement avec les autres packages du tidyverse, ce qui facilite son intégration dans vos workflows existants.\n\n\n\nInstallation\nPour installer Simputation, utilisez la commande suivante :\ninstall.packages(\"simputation\")\n\n\nExemples d’Application\n\nChargement des librairies\n\n\nlibrary(simputation)\nlibrary(tidyverse)\nlibrary(datasets)\nlibrary(naniar)\nlibrary(gt)\n\nLe package Simputation propose plusieurs méthodes d’imputation pour gérer les valeurs manquantes. Chaque méthode est basée sur un modèle statistique ou une approche algorithmique spécifique\nConseil : Lorsque vous développez des modèles d’imputation, il est judicieux d’essayer quelques modèles différents pour voir comment les valeurs imputées évoluent en fonction de vos hypothèses. Dans cette partie, nous allons imputer des données à l’aide de la régression linéaire.\n\n1. Comment fonctionne l’imputation à l’aide d’un modèle linéaire\nL’imputation par la moyenne est généralement d’une mauvaise méthode d’imputation, car elle augmente artificiellement la moyenne et réduit la variance, ce qui ne permet pas de capturer la variation naturelle des données. Utiliser un modèle linéaire pour imputer les données prendre en compte certaines caractéristiques des données, afin de mieux prédire les valeurs manquantes.\nPour imputer des valeurs à l’aide d’un modèle linéaire, nous utilisons impute_lm\nsoit la donnée airquality\n\n\ndonnées Airquality\n\nairquality %&gt;% \n  slice_head(n = 6) %&gt;%\n  gt()\n\n\n\n\n\n\n\nOzone\nSolar.R\nWind\nTemp\nMonth\nDay\n\n\n\n\n41\n190\n7.4\n67\n5\n1\n\n\n36\n118\n8.0\n72\n5\n2\n\n\n12\n149\n12.6\n74\n5\n3\n\n\n18\n313\n11.5\n62\n5\n4\n\n\nNA\nNA\n14.3\n56\n5\n5\n\n\n28\nNA\n14.9\n66\n5\n6\n\n\n\n\n\n\n\n\n\n\nUtilisation de simpite_lm()\n\nDescription :\n\nPour utiliser impute_lm(), nous spécifions la variable sur laquelle nous souhaitons imputer comme y variable dépendante ou, comme vous le feriez avec un modèle linéaire. Sur le côté droit de la formule se trouvent les variables que nous souhaitons utiliser pour former les imputations (X). Cela renvoie un bloc de données avec des valeurs imputées dans y\n\nCas pratique\n\nNous allons imputer les valeurs de la variable Solar.R utilisant les variables Wind, Temp, et Month, et enchaîner une autre étape d’imputation dans pour imputer la variable Ozone avec les mêmes variables.\n\nairquality_lm_impute &lt;- airquality %&gt;% \n  nabular() %&gt;% \n  add_label_shadow() %&gt;% \n  as.data.frame() %&gt;% \n  impute_lm(Solar.R ~ Wind + Temp + Month) %&gt;% \n  impute_lm(Ozone ~ Wind + Temp + Month) %&gt;% \n  as_tibble() \n\nairquality_lm_impute\n\n# A tibble: 153 × 13\n   Ozone Solar.R  Wind  Temp Month   Day Ozone_NA Solar.R_NA Wind_NA Temp_NA\n   &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;fct&gt;    &lt;fct&gt;      &lt;fct&gt;   &lt;fct&gt;  \n 1 41       190    7.4    67     5     1 !NA      !NA        !NA     !NA    \n 2 36       118    8      72     5     2 !NA      !NA        !NA     !NA    \n 3 12       149   12.6    74     5     3 !NA      !NA        !NA     !NA    \n 4 18       313   11.5    62     5     4 !NA      !NA        !NA     !NA    \n 5 -9.04    138.  14.3    56     5     5 NA       NA         !NA     !NA    \n 6 28       178.  14.9    66     5     6 !NA      NA         !NA     !NA    \n 7 23       299    8.6    65     5     7 !NA      !NA        !NA     !NA    \n 8 19        99   13.8    59     5     8 !NA      !NA        !NA     !NA    \n 9  8        19   20.1    61     5     9 !NA      !NA        !NA     !NA    \n10 35.2     194    8.6    69     5    10 NA       !NA        !NA     !NA    \n# ℹ 143 more rows\n# ℹ 3 more variables: Month_NA &lt;fct&gt;, Day_NA &lt;fct&gt;, any_missing &lt;chr&gt;\n\n\n\nExplication :\n\nTransformation le jeu de données en format nabular et add_label_shadow() pour identifier les valeurs manquantes en ajoutant une colonne any_missing pour indiquer les lignes avec des valeurs manquantes.\nConvertir en data.frame pour assurer la compatibilité.\nConvertir le résultat en tibble pour une manipulation facile.\n\n\nNous pouvons utiliser ggplot pour afficher les valeurs imputées, en définissant colour = any_missingun ggplot.\n\nggplot(airquality_lm_impute,\n       aes(x = Solar.R,\n           y = Ozone,\n           colour = any_missing)) +\n  geom_point()"
  },
  {
    "objectID": "news.html",
    "href": "news.html",
    "title": "Actualités",
    "section": "",
    "text": "👋 Bienvenue dans ma section Actualités !\nDécouvrez ici mes derniers projets, astuces et explorations dans le monde de la data science. Cette section est régulièrement mise à jour avec de nouveaux contenus passionnants.\n\n\n\n🚀 Projet en cours\nAnalyse de données environnementales\nJe travaille actuellement sur un projet d’analyse de données climatiques utilisant R et des techniques de visualisation avancées.\nEn savoir plus →\n\n\n💡 Astuce de la semaine\nDécouvrez le Package Simputation de R\nDécouvrez mes astuces pour l’imputations des données manquantes à travers des méthodes adaptées aux besoins\nLire l’astuce →\n\n\n📚 Ressource utile\nGuide tidyverse\nUn guide pratique que j’ai créé pour maîtriser les packages du tidyverse en R.\nConsulter le guide →\n\n\n🔧 Nouveau Tutorial\nDébutez avec Shiny\nApprenez à créer des applications web interactives avec R Shiny à travers ce tutorial pas à pas.\nVoir le tutorial →\n\n\n📊 Visualisation du mois\nDashboard Olympics games\nUn tableau de bord pour analyser des resultats des Jeux Olynpiques avec R et quarto\nExplorer le dashboard →\n\n\n🎯 Challenge R\n30 jours de R\nParticipez au challenge : un script R par jour pendant 30 jours pour améliorer vos compétences.\nRejoindre le challenge →"
  },
  {
    "objectID": "posts/climat_analysis/analyse-environnement.html",
    "href": "posts/climat_analysis/analyse-environnement.html",
    "title": "Analyse des données environnementale",
    "section": "",
    "text": "Bientôt"
  },
  {
    "objectID": "contact.html",
    "href": "contact.html",
    "title": "Contact",
    "section": "",
    "text": "N’hésitez pas à me contacter pour toute question, suggestion ou collaboration. Je vous répondrai dans les plus brefs délais.\n\n    \n        Nom\n        \n    \n    \n    \n        Email\n        \n    \n    \n    \n        Sujet\n        \n    \n    \n    \n        Message\n        \n    \n    \n    Envoyer le message\n\n\n\n\nLes messages envoyés via ce formulaire me seront transmis directement par email. Je m’efforce de répondre sous 48 heures."
  },
  {
    "objectID": "contact.html#contactez-moi",
    "href": "contact.html#contactez-moi",
    "title": "Contact",
    "section": "",
    "text": "N’hésitez pas à me contacter pour toute question, suggestion ou collaboration. Je vous répondrai dans les plus brefs délais.\n\n    \n        Nom\n        \n    \n    \n    \n        Email\n        \n    \n    \n    \n        Sujet\n        \n    \n    \n    \n        Message\n        \n    \n    \n    Envoyer le message\n\n\n\n\nLes messages envoyés via ce formulaire me seront transmis directement par email. Je m’efforce de répondre sous 48 heures."
  },
  {
    "objectID": "posts/climat_analysis/index.html",
    "href": "posts/climat_analysis/index.html",
    "title": "Analyse des données environnementale",
    "section": "",
    "text": "Bientôt"
  },
  {
    "objectID": "posts/resources/tidyverse-guide.html",
    "href": "posts/resources/tidyverse-guide.html",
    "title": "tidyverse-guide",
    "section": "",
    "text": "Bientôt disponible"
  },
  {
    "objectID": "posts/challenges/30-days-of-r.html",
    "href": "posts/challenges/30-days-of-r.html",
    "title": "30-days-of-r",
    "section": "",
    "text": "Bientôt disponible"
  }
]