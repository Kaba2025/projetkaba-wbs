[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Anassé Yahanan",
    "section": "",
    "text": "Statisticien, Data Analyst et Data Scientist, je transforme des données complexes en insights stratégiques pour une prise de décision éclairée. Expert en R, Python et SQL, je conçois des modèles statistiques, automatise des processus et développe des outils interactifs avec RShiny et Streamlit. J’ai travaillé sur des projets variés, allant de la lutte contre la désinformation à l’optimisation marketing, en passant par la prévision des ventes et les systèmes de recommandation. Formateur en R et Python, je partage mes compétences pour renforcer les capacités en analyse de données. Passionné par les données, je combine rigueur analytique et créativité technique pour créer un impact mesurable."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Bienvenue sur mon blog",
    "section": "",
    "text": "Je suis ravi de vous accueillir dans cet espace dédié à la passion des données, de l’analyse et de l’innovation. Ici, vous découvrirez mes projets, mes compétences et mes réflexions autour de la Data Science, de la statistique et de la visualisation de données.\nL’objectif de ce blog est de partager mon parcours, mes réalisations et mes apprentissages, tout en offrant des insights utiles et pratiques sur le monde des données. Que vous soyez un professionnel chevronné, un passionné de données ou simplement curieux, vous trouverez ici des contenus variés : analyses de projets, tutoriels techniques, astuces pour optimiser vos workflows, et bien plus encore.\nExplorez, inspirez-vous et n’hésitez pas à me contacter pour échanger ou collaborer. Ensemble, transformons les données en solutions concrètes et impactantes !\nBonne visite,"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Analyse des donnees MPG",
    "section": "",
    "text": "Les données utilisées proviennent du jeu de données mpg inclut dans le package ggplot2. La base de données contient des informations sur la consommation de carburants de 234 vehicules, modèles de 1999 à 2008 ainsi que divers caractéristiques techniques et descriptives de ces véhicules.\n\n\n\n\nExplorer et analyser les relations entre les différentes variables du jeu de données mpg afin de fournir des recommandations aux acheteurs concernant la consommation de carburant des véhicules.\nspécifiquement il s’agirat :\n\nD’explorer les données : comprendre la structure des données , identifier les variables clés et détecter les anomalies, valeurs aberrantes ou manquantes, creer si possible de nouvelles variables\nRéaliser une analyse descriptive : resumer les principales caractéristiques des données à l’aide de statistiques descriptives\nAnalyser la consommation de varburant : Etudier les facteurs qui influent la consommation de carburant (milles par gallon [mpg ]\nModeliser : Construstruire des modele de regression pour predire la consommation\nVisualiser les resultats : Créer des visuels informatfs pour communuquer les résultats\n\n\n\n\n\n\nImporter les données mpg\nNetoyer les données\n\nvaleurs manquantes\nvaleurs aberrantes\ndoublons\n\nAnalyse exploratoire (EDA)\n\nfeature engineering\nstatistique descriptive\n\nVisualiser et communiquer les résultats\n\nBivariées des variables pertinentes\nmultivariées\nsegmentation (K-means)\n\n\n\n\n\n\nLes principaux facteurs qui influencent la consommation de carburant des vehicules sont identifiés\nLes insights sur les tendances et les patterns contenus dans la données sont fournit\nDes recommandations basées sur les résultats de l’analyse sont proposées\n\n\n\n\n\nL’ensemble des packages utilisés pour la réalisation de ce projet sont :\n\nlibrary(tidyverse)\nlibrary(naniar)\nlibrary(DT)\nlibrary(psych)\nlibrary(ggheatmap)\nlibrary(reshape2)\nlibrary(ggplot2)\nlibrary(ggforce)\nlibrary(glue)\nlibrary(ggdist)\n\n\n\n\n\n\n\nValeurs manquantes - valeurs en double\n\nLe graphique totalement gris montre que les données mpg ne contiennent pas de valeurs manquantes\nL’ensembles des données ne contiennent pas de doublon\n\n\n\nmpg %&gt;% \n  vis_miss()\n\n\n\n\n\n\n\n\n\n\n\n\n\nForatage des données\nTranformation de toutes les varibles de type chr en factor\n\n\nmpg_format &lt;- \n  mpg %&gt;% \n  mutate_if(is.character, as.factor)\n\n\nCréation de nouvelles variables\n\nconsommation moyenne de carburant (avg_mpg) [ avg_mpg = (cty + hwy) /2 ]\ncatégorisation de la consommation [ Faible : agv_mpg&lt;20; Moyenne : 20&lt;=avg_mpg&lt;=40 sinon Elevée ]\némission de CO2 des véhicules [ 1 gallon —&gt; 8.89 kg CO2 ; 1 mille/gallon —&gt;0.425 kg CO2 ]\ncatégorisation de la cylindré [ Petite: displ&lt;2.0, Moyenne : 2.0&lt;=displ&lt;=4.0 sinon Grande ]\n\n\n\nmpg_aumente &lt;- \n  mpg_format %&gt;% \n  mutate(\n    # calcule de avg_mpg\n    avg_mpg = (cty + hwy)/2,\n    # catégorisation de la consommation \n         fuel_efficiency = case_when(\n           avg_mpg &lt; 20 ~ \"Faible\",\n           avg_mpg &gt;= 20 & avg_mpg &lt;=30 ~ \"Moyenne\",\n           TRUE ~ \"Elevee\"\n         ),\n    # émission de CO2\n         co2_emission = round((8887/avg_mpg) * 0.621371),\n    # catégorisation de la cylindrée \n         displ_category = case_when(\n           displ &lt; 2.0 ~ \"Petite\",\n           displ &gt;= 2.0 & displ &lt;= 4.0 ~ \"Moyenne\",\n           TRUE ~ \"Grande\"\n         ))\n\n\n\n\n\nDictionnaire des données\n\n\nSource : Données mpg (ggplot2)\n\n\n\n\n\n\n\n\nVariables\nDescriptif\nNature\nModalités\n\n\n\n\n\nVariables initiales\n\n\n\n\nmanufacturer\nConstructeur de véhicule\nfactor\naudi, toyota, etc…\n\n\nmodel\nModèle du véhicule\nfactor\na4, a4 quatro, etc…\n\n\nyear\nAnnée du modèle\nint\n\n\n\ncyl\nNombre de cylindres\nint\n\n\n\ntrans\nType de transmission\nfactor\nauto, manuel\n\n\ndrv\nType de traction\nfactor\nf : avant, r : propultion , 4 : 4x4\n\n\ndispl\ncylindres du moteur (en littre)\nint\n\n\n\ncty\nConsommation en ville\nint\n\n\n\nhwy\nConsommation sur autoroute\nint\n\n\n\nfl\nType de carburant\nfactor\np , etc…\n\n\nclass\nclasse de véhicule\nfactor\nsuv, compact, etc…\n\n\n\nVariables ajoutées (crées)\n\n\n\n\navg_mpg\nconsommation moyenne de carburant\nint\n\n\n\nfuel_efficiency\ncatégorisation de la consommation\nfactor\nFaible, Moyen, etc…\n\n\nCO2_emission\nQuantité de CO2 émit par les véhicules\nint\n\n\n\ndispl_categoty\nCatégorisation de la cylindré\nfactor\nPetite, Moyenne, etc..\n\n\n\n\nPrésentation de la base de données\n\n\ndatatable(mpg_aumente, \n          extensions = 'Buttons',\n          options = list(\n            dom = 'Bfrtip',\n            button = c('copy', 'csv', 'excel', 'pdf', 'print'),\n            pageLength = 10,\n            lengthMenu = c(5, 10, 15, 20),\n            searching = TRUE,\n            ordering = TRUE,\n            scrollX = TRUE\n          ),\n          caption = \"Base de Données mpg Augmentée\",\n          filter = \"top\")\n\n\n\n\n\n\n\n\n\nRésumé statistique des variables numériques\n\n\nstat_num &lt;- mpg_aumente %&gt;% \n  select_if(is.numeric) %&gt;% \n  select(!c(\"year\",\"cyl\")) %&gt;% \n  describe()\n# choix des statistique à visualiser \nstat_num[, c(\"mean\",\"sd\",\"median\",\"min\",\"max\",\"range\",\"skew\", \"kurtosis\")] %&gt;% knitr::kable(digits = 2, caption = \"Résumé Statistique des variables numériques\")\n\n\nRésumé Statistique des variables numériques\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmean\nsd\nmedian\nmin\nmax\nrange\nskew\nkurtosis\n\n\n\n\ndispl\n3.47\n1.29\n3.3\n1.6\n7.0\n5.4\n0.44\n-0.91\n\n\ncty\n16.86\n4.26\n17.0\n9.0\n35.0\n26.0\n0.79\n1.43\n\n\nhwy\n23.44\n5.95\n24.0\n12.0\n44.0\n32.0\n0.36\n0.14\n\n\navg_mpg\n20.15\n5.05\n20.5\n10.5\n39.5\n29.0\n0.54\n0.66\n\n\nco2_emission\n292.00\n75.97\n269.0\n140.0\n526.0\n386.0\n0.76\n0.30\n\n\n\n\n\n\nRésumé statistique des variables catégorielle (factor)\n\n\n mpg_aumente%&gt;% \n  mutate_if(is.character, as.factor) %&gt;% \n  select_if(is.factor) %&gt;% \n   select(-trans) %&gt;% \n  skimr::skim() %&gt;% \n   as_tibble() %&gt;% \n   mutate(variable = skim_variable,\n          modalite_unique = factor.n_unique,\n          top_modalite = factor.top_counts) %&gt;%\n   select(variable,modalite_unique,top_modalite ) %&gt;% \n   knitr::kable(align = \"c\", \n                caption = \"Résumé Statistique des variables numériques\")\n\n\nRésumé Statistique des variables numériques\n\n\n\n\n\n\n\nvariable\nmodalite_unique\ntop_modalite\n\n\n\n\nmanufacturer\n15\ndod: 37, toy: 34, vol: 27, for: 25\n\n\nmodel\n38\ncar: 11, ram: 10, civ: 9, dak: 9\n\n\ndrv\n3\nf: 106, 4: 103, r: 25\n\n\nfl\n5\nr: 168, p: 52, e: 8, d: 5\n\n\nclass\n7\nsuv: 62, com: 47, mid: 41, sub: 35\n\n\nfuel_efficiency\n3\nMoy: 120, Fai: 106, Ele: 8\n\n\ndispl_category\n3\nMoy: 141, Gra: 71, Pet: 22\n\n\n\n\n\n\n\n\n\n\n\n\n\nDistribustion de la variable displ\n\n\nmpg_aumente %&gt;% \n  ggplot(aes(displ))+\n  geom_histogram(bins = 25) +\n  theme_minimal()+\n  labs(\n    subtitle = \"Distribustion du nombre de cylindré (n = 234) \",\n    x = \"Nombre de cylindres\",\n    y = \"\",\n    caption = \"Source : mpg data - ggplot2_package\"\n  )\n\n\n\n\n\n\n\n\n\nDistribustion de la variable avg_mpg\n\n\nmpg_aumente %&gt;% \n  ggplot(aes(avg_mpg))+\n  geom_histogram(bins = 25) +\n  theme_minimal()+\n  labs(\n    title = \"Distribustion de la consommation moyenne (n = 234)\",\n    x = \"consomation de carburant(mille/gallon)\",\n    y = \"\",\n    caption = \"Source : mpg data - ggplot2_package\"\n  )\n\n\n\n\n\n\n\n\n\n\n\n\nDistribustion de la variable manufacturer\n\n\nmpg_2008 = mpg_aumente %&gt;% \n  filter(year == 2008,\n         !(class %in% c(\"2seater\",\"minivan\"))) %&gt;% \n  mutate(\n    class = case_when(\n      class %in% c(\"compact\", \"subcompact\") ~ '(Sub-)Compact',\n      class %in% c(\"pickup\", \"suv\") ~ 'Pickup/SUV',\n      TRUE ~ str_to_title(class)\n    ),\n    manufacturer = str_to_title(manufacturer),\n    manufacturer = fct_infreq(manufacturer) |&gt;  fct_rev()\n  )\n \n\ncolors &lt;- thematic::okabe_ito(4)\ngraphe_decomposé = mpg_2008 %&gt;% \n  ggplot(aes(y = manufacturer, fill = class))+\n  geom_bar()+\n  theme_minimal(base_size = 10,\n                base_family = 'Source Sans Pro'\n  )+\n  scale_fill_manual(values = colors[1:3])+\n  facet_wrap(vars(class))+\n  labs(x = element_blank(), y = element_blank())+\n  theme(\n    panel.grid.minor = element_blank(),\n    panel.grid.major.y = element_blank(),\n    legend.position = 'none'\n  )\n\n\ntotal_plot = mpg_2008 %&gt;% \n  ggplot(aes(y = manufacturer))+\n  geom_bar(fill = colors[4])+\n  geom_vline(xintercept = 0)+\n  theme_minimal(base_size = 10, base_family = 'Source Sans Pro')+\n  scale_fill_manual(values = colors[1:3])+\n  scale_y_discrete(labels = element_blank())+\n  facet_wrap(vars('Total'))+\n  labs(x = element_blank(), y = element_blank())+\n  theme(\n    panel.grid.minor = element_blank(),\n    panel.grid.major.y = element_blank(),\n    legend.position = 'none'\n  )\n\n\nlibrary(patchwork)\ngraphe_decomposé + total_plot+\n  plot_annotation(\n    title = 'Vehicules par entreprise et par classe',\n    theme = theme(\n      element_text(size=12, family = 'Merriweather')\n    )\n  )\n\n\n\n\n\n\n\n\n\nDistribustion de la variable trans\n\n\ncolors &lt;- c(\"dodgerblue4\",\"firebrick2\")\n\nmpg_aumente %&gt;% \n  mutate(\n   # transformation des modaités de trans en (auto ou manuel)\n    trans_two_modalities = case_when(\n      str_detect(trans, \"auto\") ~ \"auto\",\n      TRUE ~ \"manuel\"\n    ),\n    trans_two_modalities = str_to_title(trans_two_modalities)\n  ) %&gt;% \n  \n  group_by(trans_two_modalities) %&gt;% \n  summarise(nb_modalities = n(),\n            prop= round((nb_modalities*100)/234),\n            lab.ypos = cumsum(prop) - (0.3* prop),\n            prop_percent = str_c(prop, \"%\", sep = \"\")\n            ) %&gt;% \n  ungroup() %&gt;% \n  \n    ggplot(aes(x = 2,y = prop, fill = trans_two_modalities))+\n  geom_bar(width = 1,stat = \"identity\", color = \"white\")+\n  coord_polar(\"y\", start = 0)+\n  geom_text(aes(y = lab.ypos, label = prop_percent))+\n  scale_fill_manual(values =colors)+\n  theme_void()+\n  labs(subtitle =\"Distribustion des types de transmission des véhicules (n = 234)\",\n       caption = \"Source : mpg data - ggplot2_package\",\n       fill = \"Transmission\")+\n  xlim(0.5,2.5)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncov_matrix &lt;-  mpg_aumente %&gt;% \n  select_if(is.numeric) %&gt;% \n  cor()\n\ncov_tibble &lt;- cov_matrix %&gt;% \n  as_tibble(rownames = 'var_a') %&gt;% \n  pivot_longer(\n    -var_a,\n    names_to = \"var_b\",\n    values_to = \"correlation\"\n  )\n\nvar_names &lt;- unique(cov_tibble$var_a)\ncov_tibble_factored &lt;-  cov_tibble %&gt;% \n  mutate(\n    var_a = factor(var_a, levels = var_names),\n    var_b = factor(var_b, levels = rev(var_names))\n  )\n \n  \ncov_tibble_factored %&gt;% \n  ggplot(aes(var_a, var_b))+\n  geom_tile(aes(fill = correlation), color = \"black\")+\n  geom_text(aes(label = round(correlation,2)),\n            color = ifelse(\n              abs(cov_tibble_factored$correlation) &gt; 0.6,\n              'white',\n              'black'\n            ),\n            size = 3.5,\n            family = 'Source Sans Pro',\n            fontface = 'bold'\n            \n  )+\n  theme_minimal(\n    base_size = 12,\n    base_family = 'Source Sans Pro'\n  )+\n  labs(\n    x = element_blank(),\n    y = element_blank(),\n    fill = 'Correlation',\n    subtitle = \"Intensité des liaisons entre les variable numérique mpg\",\n    caption = \"Source : mpg data - ggplot2_package\",\n  )+\n  scale_fill_gradient2(\n    high = 'dodgerblue4',\n    mid = 'white',\n    low = 'firebrick2',\n    limits = c(-1,1),\n    midpoint = 0\n  )+\n  coord_cartesian(expand = FALSE)+\n  theme(legend.position = 'top')+\n  guides(\n    fill = guide_colorbar(\n      barwidth = unit(10, 'cm')\n    ),\n    x = guide_axis(n.dodge = 2)\n  )\n\n\n\n\n\n\n\n\nHypothèse :\n\nUne cylindré plus élevée est associée à une consommation plus faible (displ vs. avg_mpg )\nUne cylindré plus élevée est associée à des émissions de C02 plus élevée (displ & cyl vs. co2_emission)\nLes véhicules économes en villes le sont également sur autoroute (cty sv. hwy)\n\n\n\n\n\nComment la cylindrée influence -t-elle la consommation moyenne ? (avg_mpg vs. displ)\n\n\nnuage_point &lt;- \n  mpg_aumente %&gt;% \n  filter(cyl %in% c(2,4,6,8)) %&gt;% \n  ggplot(aes(displ,avg_mpg, fill = cyl))+\n  geom_point(shape =21, size = 3)+\n  geom_mark_ellipse(\n    data = mpg_aumente |&gt;\n      filter(displ &lt;= 2.5 & between(avg_mpg, 30,40)),\n    aes(\n      x0 = 3,\n      y0 = 35,\n      label = \"Consommation importante de carburant\",\n      \n    ),\n    fill = \"firebrick2\",\n    alpha = 0.1\n  ) +\n  labs(\n    x = \"Taille de la cylindrés du moteur (en littre)\",\n    y = \"Consommation moyenne de carburant (en mpg)\",\n    fill = \"Nombre de cylindres\",\n    subtitle = \"Distribustion de la consommation de carburant selon la cylindré\",\n    caption = \"Source : mpg data - ggplot2_package\",\n  )+\n  theme_minimal(base_size =10)+\n  theme(\n    legend.position = 'top',\n    legend.title = element_text(face = 'bold'),\n    panel.grid.minor = element_blank()\n  ) +\n  scale_fill_distiller(\n    palette = 'Blues',\n    direction = 1\n  )\n\nnuage_point +\n  guides(\n    fill = guide_coloursteps(\n      title.position = 'top',\n      barwidth = unit(7, 'cm')\n    )\n  )\n\n\n\n\n\n\n\n\n\nComment le type de transmission affecte -t-il la consommation moyenne ? (avg_mpg vs. trans)\n\n\nmpg_aumente %&gt;%\n  mutate(\n    trans = str_to_title(trans)\n  ) %&gt;% \n  group_by(trans) %&gt;% \n  summarise(avg_mpg= mean(avg_mpg)) %&gt;% \n  ungroup()  %&gt;% \n  ggplot(aes(x =avg_mpg, y = trans))+\n  geom_point(\n    color = 'dodgerblue4',\n    size = 4\n  )+\n  geom_text(\n    aes(\n      label = trans\n    ),\n    hjust = 1,\n    nudge_x = -0.09,\n    size = 3,\n    family = 'Merriweather'\n  )+\n  theme_minimal(\n    base_size = 10,\n    base_family = 'Merriweather'\n  )+\n  labs(subtitle = \"Evolution de la consommation moyenne par type de transmission\",\n       x = element_blank(),\n       y = element_blank(),\n       caption = \"Source : mpg data - ggplot2_package\"\n  )+\n  scale_x_continuous(\n    expand = expansion(mult = c(0.15,0.05))\n  )+\n  theme(\n    panel.grid.major.y = element_blank(),\n    plot.title.position = 'plot',\n    axis.text.y = element_blank()\n  )\n\n\n\n\n\n\n\n\n\nComment le type de traction inflence -t-il la consommation moyenne ? (avg_mpg vs. drv)\n\n\ncolors &lt;-  c(\"firebrick2\",'#009E73', 'dodgerblue4')\nnames(colors) &lt;-  unique(mpg_aumente$drv)\n\n\nmpg_aumente %&gt;% \n  ggplot(aes(avg_mpg, fill = drv, y = drv))+\n  geom_boxplot(width = 0.08) +\n  geom_dots(\n    side = 'bottom',\n    height = 0.55,\n    position = position_nudge(y = -0.075)\n  )+\n  stat_slab(\n    position = position_nudge(y = 0.075),\n    height = 0.75\n  )+\n  scale_fill_manual(values = colors)+\n  labs(\n    subtitle = \"Evolution de la consommation moyenne par type de traction\",\n    x = element_blank(),\n    y = element_blank(),\n    caption = \"Source : mpg data - ggplot2_package\"\n  )+\n  theme_minimal(\n    base_size = 10,\n    base_family = 'Merriweather'\n  )+\n  theme(\n    panel.grid.minor = element_blank(),\n    legend.position = 'none'\n  )"
  },
  {
    "objectID": "posts/post-with-code/index.html#presentation-du-projet",
    "href": "posts/post-with-code/index.html#presentation-du-projet",
    "title": "Analyse des donnees MPG",
    "section": "",
    "text": "Les données utilisées proviennent du jeu de données mpg inclut dans le package ggplot2. La base de données contient des informations sur la consommation de carburants de 234 vehicules, modèles de 1999 à 2008 ainsi que divers caractéristiques techniques et descriptives de ces véhicules.\n\n\n\n\nExplorer et analyser les relations entre les différentes variables du jeu de données mpg afin de fournir des recommandations aux acheteurs concernant la consommation de carburant des véhicules.\nspécifiquement il s’agirat :\n\nD’explorer les données : comprendre la structure des données , identifier les variables clés et détecter les anomalies, valeurs aberrantes ou manquantes, creer si possible de nouvelles variables\nRéaliser une analyse descriptive : resumer les principales caractéristiques des données à l’aide de statistiques descriptives\nAnalyser la consommation de varburant : Etudier les facteurs qui influent la consommation de carburant (milles par gallon [mpg ]\nModeliser : Construstruire des modele de regression pour predire la consommation\nVisualiser les resultats : Créer des visuels informatfs pour communuquer les résultats\n\n\n\n\n\n\nImporter les données mpg\nNetoyer les données\n\nvaleurs manquantes\nvaleurs aberrantes\ndoublons\n\nAnalyse exploratoire (EDA)\n\nfeature engineering\nstatistique descriptive\n\nVisualiser et communiquer les résultats\n\nBivariées des variables pertinentes\nmultivariées\nsegmentation (K-means)\n\n\n\n\n\n\nLes principaux facteurs qui influencent la consommation de carburant des vehicules sont identifiés\nLes insights sur les tendances et les patterns contenus dans la données sont fournit\nDes recommandations basées sur les résultats de l’analyse sont proposées\n\n\n\n\n\nL’ensemble des packages utilisés pour la réalisation de ce projet sont :\n\nlibrary(tidyverse)\nlibrary(naniar)\nlibrary(DT)\nlibrary(psych)\nlibrary(ggheatmap)\nlibrary(reshape2)\nlibrary(ggplot2)\nlibrary(ggforce)\nlibrary(glue)\nlibrary(ggdist)\n\n\n\n\n\n\n\nValeurs manquantes - valeurs en double\n\nLe graphique totalement gris montre que les données mpg ne contiennent pas de valeurs manquantes\nL’ensembles des données ne contiennent pas de doublon\n\n\n\nmpg %&gt;% \n  vis_miss()\n\n\n\n\n\n\n\n\n\n\n\n\n\nForatage des données\nTranformation de toutes les varibles de type chr en factor\n\n\nmpg_format &lt;- \n  mpg %&gt;% \n  mutate_if(is.character, as.factor)\n\n\nCréation de nouvelles variables\n\nconsommation moyenne de carburant (avg_mpg) [ avg_mpg = (cty + hwy) /2 ]\ncatégorisation de la consommation [ Faible : agv_mpg&lt;20; Moyenne : 20&lt;=avg_mpg&lt;=40 sinon Elevée ]\némission de CO2 des véhicules [ 1 gallon —&gt; 8.89 kg CO2 ; 1 mille/gallon —&gt;0.425 kg CO2 ]\ncatégorisation de la cylindré [ Petite: displ&lt;2.0, Moyenne : 2.0&lt;=displ&lt;=4.0 sinon Grande ]\n\n\n\nmpg_aumente &lt;- \n  mpg_format %&gt;% \n  mutate(\n    # calcule de avg_mpg\n    avg_mpg = (cty + hwy)/2,\n    # catégorisation de la consommation \n         fuel_efficiency = case_when(\n           avg_mpg &lt; 20 ~ \"Faible\",\n           avg_mpg &gt;= 20 & avg_mpg &lt;=30 ~ \"Moyenne\",\n           TRUE ~ \"Elevee\"\n         ),\n    # émission de CO2\n         co2_emission = round((8887/avg_mpg) * 0.621371),\n    # catégorisation de la cylindrée \n         displ_category = case_when(\n           displ &lt; 2.0 ~ \"Petite\",\n           displ &gt;= 2.0 & displ &lt;= 4.0 ~ \"Moyenne\",\n           TRUE ~ \"Grande\"\n         ))\n\n\n\n\n\nDictionnaire des données\n\n\nSource : Données mpg (ggplot2)\n\n\n\n\n\n\n\n\nVariables\nDescriptif\nNature\nModalités\n\n\n\n\n\nVariables initiales\n\n\n\n\nmanufacturer\nConstructeur de véhicule\nfactor\naudi, toyota, etc…\n\n\nmodel\nModèle du véhicule\nfactor\na4, a4 quatro, etc…\n\n\nyear\nAnnée du modèle\nint\n\n\n\ncyl\nNombre de cylindres\nint\n\n\n\ntrans\nType de transmission\nfactor\nauto, manuel\n\n\ndrv\nType de traction\nfactor\nf : avant, r : propultion , 4 : 4x4\n\n\ndispl\ncylindres du moteur (en littre)\nint\n\n\n\ncty\nConsommation en ville\nint\n\n\n\nhwy\nConsommation sur autoroute\nint\n\n\n\nfl\nType de carburant\nfactor\np , etc…\n\n\nclass\nclasse de véhicule\nfactor\nsuv, compact, etc…\n\n\n\nVariables ajoutées (crées)\n\n\n\n\navg_mpg\nconsommation moyenne de carburant\nint\n\n\n\nfuel_efficiency\ncatégorisation de la consommation\nfactor\nFaible, Moyen, etc…\n\n\nCO2_emission\nQuantité de CO2 émit par les véhicules\nint\n\n\n\ndispl_categoty\nCatégorisation de la cylindré\nfactor\nPetite, Moyenne, etc..\n\n\n\n\nPrésentation de la base de données\n\n\ndatatable(mpg_aumente, \n          extensions = 'Buttons',\n          options = list(\n            dom = 'Bfrtip',\n            button = c('copy', 'csv', 'excel', 'pdf', 'print'),\n            pageLength = 10,\n            lengthMenu = c(5, 10, 15, 20),\n            searching = TRUE,\n            ordering = TRUE,\n            scrollX = TRUE\n          ),\n          caption = \"Base de Données mpg Augmentée\",\n          filter = \"top\")\n\n\n\n\n\n\n\n\n\nRésumé statistique des variables numériques\n\n\nstat_num &lt;- mpg_aumente %&gt;% \n  select_if(is.numeric) %&gt;% \n  select(!c(\"year\",\"cyl\")) %&gt;% \n  describe()\n# choix des statistique à visualiser \nstat_num[, c(\"mean\",\"sd\",\"median\",\"min\",\"max\",\"range\",\"skew\", \"kurtosis\")] %&gt;% knitr::kable(digits = 2, caption = \"Résumé Statistique des variables numériques\")\n\n\nRésumé Statistique des variables numériques\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmean\nsd\nmedian\nmin\nmax\nrange\nskew\nkurtosis\n\n\n\n\ndispl\n3.47\n1.29\n3.3\n1.6\n7.0\n5.4\n0.44\n-0.91\n\n\ncty\n16.86\n4.26\n17.0\n9.0\n35.0\n26.0\n0.79\n1.43\n\n\nhwy\n23.44\n5.95\n24.0\n12.0\n44.0\n32.0\n0.36\n0.14\n\n\navg_mpg\n20.15\n5.05\n20.5\n10.5\n39.5\n29.0\n0.54\n0.66\n\n\nco2_emission\n292.00\n75.97\n269.0\n140.0\n526.0\n386.0\n0.76\n0.30\n\n\n\n\n\n\nRésumé statistique des variables catégorielle (factor)\n\n\n mpg_aumente%&gt;% \n  mutate_if(is.character, as.factor) %&gt;% \n  select_if(is.factor) %&gt;% \n   select(-trans) %&gt;% \n  skimr::skim() %&gt;% \n   as_tibble() %&gt;% \n   mutate(variable = skim_variable,\n          modalite_unique = factor.n_unique,\n          top_modalite = factor.top_counts) %&gt;%\n   select(variable,modalite_unique,top_modalite ) %&gt;% \n   knitr::kable(align = \"c\", \n                caption = \"Résumé Statistique des variables numériques\")\n\n\nRésumé Statistique des variables numériques\n\n\n\n\n\n\n\nvariable\nmodalite_unique\ntop_modalite\n\n\n\n\nmanufacturer\n15\ndod: 37, toy: 34, vol: 27, for: 25\n\n\nmodel\n38\ncar: 11, ram: 10, civ: 9, dak: 9\n\n\ndrv\n3\nf: 106, 4: 103, r: 25\n\n\nfl\n5\nr: 168, p: 52, e: 8, d: 5\n\n\nclass\n7\nsuv: 62, com: 47, mid: 41, sub: 35\n\n\nfuel_efficiency\n3\nMoy: 120, Fai: 106, Ele: 8\n\n\ndispl_category\n3\nMoy: 141, Gra: 71, Pet: 22\n\n\n\n\n\n\n\n\n\n\n\n\n\nDistribustion de la variable displ\n\n\nmpg_aumente %&gt;% \n  ggplot(aes(displ))+\n  geom_histogram(bins = 25) +\n  theme_minimal()+\n  labs(\n    subtitle = \"Distribustion du nombre de cylindré (n = 234) \",\n    x = \"Nombre de cylindres\",\n    y = \"\",\n    caption = \"Source : mpg data - ggplot2_package\"\n  )\n\n\n\n\n\n\n\n\n\nDistribustion de la variable avg_mpg\n\n\nmpg_aumente %&gt;% \n  ggplot(aes(avg_mpg))+\n  geom_histogram(bins = 25) +\n  theme_minimal()+\n  labs(\n    title = \"Distribustion de la consommation moyenne (n = 234)\",\n    x = \"consomation de carburant(mille/gallon)\",\n    y = \"\",\n    caption = \"Source : mpg data - ggplot2_package\"\n  )\n\n\n\n\n\n\n\n\n\n\n\n\nDistribustion de la variable manufacturer\n\n\nmpg_2008 = mpg_aumente %&gt;% \n  filter(year == 2008,\n         !(class %in% c(\"2seater\",\"minivan\"))) %&gt;% \n  mutate(\n    class = case_when(\n      class %in% c(\"compact\", \"subcompact\") ~ '(Sub-)Compact',\n      class %in% c(\"pickup\", \"suv\") ~ 'Pickup/SUV',\n      TRUE ~ str_to_title(class)\n    ),\n    manufacturer = str_to_title(manufacturer),\n    manufacturer = fct_infreq(manufacturer) |&gt;  fct_rev()\n  )\n \n\ncolors &lt;- thematic::okabe_ito(4)\ngraphe_decomposé = mpg_2008 %&gt;% \n  ggplot(aes(y = manufacturer, fill = class))+\n  geom_bar()+\n  theme_minimal(base_size = 10,\n                base_family = 'Source Sans Pro'\n  )+\n  scale_fill_manual(values = colors[1:3])+\n  facet_wrap(vars(class))+\n  labs(x = element_blank(), y = element_blank())+\n  theme(\n    panel.grid.minor = element_blank(),\n    panel.grid.major.y = element_blank(),\n    legend.position = 'none'\n  )\n\n\ntotal_plot = mpg_2008 %&gt;% \n  ggplot(aes(y = manufacturer))+\n  geom_bar(fill = colors[4])+\n  geom_vline(xintercept = 0)+\n  theme_minimal(base_size = 10, base_family = 'Source Sans Pro')+\n  scale_fill_manual(values = colors[1:3])+\n  scale_y_discrete(labels = element_blank())+\n  facet_wrap(vars('Total'))+\n  labs(x = element_blank(), y = element_blank())+\n  theme(\n    panel.grid.minor = element_blank(),\n    panel.grid.major.y = element_blank(),\n    legend.position = 'none'\n  )\n\n\nlibrary(patchwork)\ngraphe_decomposé + total_plot+\n  plot_annotation(\n    title = 'Vehicules par entreprise et par classe',\n    theme = theme(\n      element_text(size=12, family = 'Merriweather')\n    )\n  )\n\n\n\n\n\n\n\n\n\nDistribustion de la variable trans\n\n\ncolors &lt;- c(\"dodgerblue4\",\"firebrick2\")\n\nmpg_aumente %&gt;% \n  mutate(\n   # transformation des modaités de trans en (auto ou manuel)\n    trans_two_modalities = case_when(\n      str_detect(trans, \"auto\") ~ \"auto\",\n      TRUE ~ \"manuel\"\n    ),\n    trans_two_modalities = str_to_title(trans_two_modalities)\n  ) %&gt;% \n  \n  group_by(trans_two_modalities) %&gt;% \n  summarise(nb_modalities = n(),\n            prop= round((nb_modalities*100)/234),\n            lab.ypos = cumsum(prop) - (0.3* prop),\n            prop_percent = str_c(prop, \"%\", sep = \"\")\n            ) %&gt;% \n  ungroup() %&gt;% \n  \n    ggplot(aes(x = 2,y = prop, fill = trans_two_modalities))+\n  geom_bar(width = 1,stat = \"identity\", color = \"white\")+\n  coord_polar(\"y\", start = 0)+\n  geom_text(aes(y = lab.ypos, label = prop_percent))+\n  scale_fill_manual(values =colors)+\n  theme_void()+\n  labs(subtitle =\"Distribustion des types de transmission des véhicules (n = 234)\",\n       caption = \"Source : mpg data - ggplot2_package\",\n       fill = \"Transmission\")+\n  xlim(0.5,2.5)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncov_matrix &lt;-  mpg_aumente %&gt;% \n  select_if(is.numeric) %&gt;% \n  cor()\n\ncov_tibble &lt;- cov_matrix %&gt;% \n  as_tibble(rownames = 'var_a') %&gt;% \n  pivot_longer(\n    -var_a,\n    names_to = \"var_b\",\n    values_to = \"correlation\"\n  )\n\nvar_names &lt;- unique(cov_tibble$var_a)\ncov_tibble_factored &lt;-  cov_tibble %&gt;% \n  mutate(\n    var_a = factor(var_a, levels = var_names),\n    var_b = factor(var_b, levels = rev(var_names))\n  )\n \n  \ncov_tibble_factored %&gt;% \n  ggplot(aes(var_a, var_b))+\n  geom_tile(aes(fill = correlation), color = \"black\")+\n  geom_text(aes(label = round(correlation,2)),\n            color = ifelse(\n              abs(cov_tibble_factored$correlation) &gt; 0.6,\n              'white',\n              'black'\n            ),\n            size = 3.5,\n            family = 'Source Sans Pro',\n            fontface = 'bold'\n            \n  )+\n  theme_minimal(\n    base_size = 12,\n    base_family = 'Source Sans Pro'\n  )+\n  labs(\n    x = element_blank(),\n    y = element_blank(),\n    fill = 'Correlation',\n    subtitle = \"Intensité des liaisons entre les variable numérique mpg\",\n    caption = \"Source : mpg data - ggplot2_package\",\n  )+\n  scale_fill_gradient2(\n    high = 'dodgerblue4',\n    mid = 'white',\n    low = 'firebrick2',\n    limits = c(-1,1),\n    midpoint = 0\n  )+\n  coord_cartesian(expand = FALSE)+\n  theme(legend.position = 'top')+\n  guides(\n    fill = guide_colorbar(\n      barwidth = unit(10, 'cm')\n    ),\n    x = guide_axis(n.dodge = 2)\n  )\n\n\n\n\n\n\n\n\nHypothèse :\n\nUne cylindré plus élevée est associée à une consommation plus faible (displ vs. avg_mpg )\nUne cylindré plus élevée est associée à des émissions de C02 plus élevée (displ & cyl vs. co2_emission)\nLes véhicules économes en villes le sont également sur autoroute (cty sv. hwy)\n\n\n\n\n\nComment la cylindrée influence -t-elle la consommation moyenne ? (avg_mpg vs. displ)\n\n\nnuage_point &lt;- \n  mpg_aumente %&gt;% \n  filter(cyl %in% c(2,4,6,8)) %&gt;% \n  ggplot(aes(displ,avg_mpg, fill = cyl))+\n  geom_point(shape =21, size = 3)+\n  geom_mark_ellipse(\n    data = mpg_aumente |&gt;\n      filter(displ &lt;= 2.5 & between(avg_mpg, 30,40)),\n    aes(\n      x0 = 3,\n      y0 = 35,\n      label = \"Consommation importante de carburant\",\n      \n    ),\n    fill = \"firebrick2\",\n    alpha = 0.1\n  ) +\n  labs(\n    x = \"Taille de la cylindrés du moteur (en littre)\",\n    y = \"Consommation moyenne de carburant (en mpg)\",\n    fill = \"Nombre de cylindres\",\n    subtitle = \"Distribustion de la consommation de carburant selon la cylindré\",\n    caption = \"Source : mpg data - ggplot2_package\",\n  )+\n  theme_minimal(base_size =10)+\n  theme(\n    legend.position = 'top',\n    legend.title = element_text(face = 'bold'),\n    panel.grid.minor = element_blank()\n  ) +\n  scale_fill_distiller(\n    palette = 'Blues',\n    direction = 1\n  )\n\nnuage_point +\n  guides(\n    fill = guide_coloursteps(\n      title.position = 'top',\n      barwidth = unit(7, 'cm')\n    )\n  )\n\n\n\n\n\n\n\n\n\nComment le type de transmission affecte -t-il la consommation moyenne ? (avg_mpg vs. trans)\n\n\nmpg_aumente %&gt;%\n  mutate(\n    trans = str_to_title(trans)\n  ) %&gt;% \n  group_by(trans) %&gt;% \n  summarise(avg_mpg= mean(avg_mpg)) %&gt;% \n  ungroup()  %&gt;% \n  ggplot(aes(x =avg_mpg, y = trans))+\n  geom_point(\n    color = 'dodgerblue4',\n    size = 4\n  )+\n  geom_text(\n    aes(\n      label = trans\n    ),\n    hjust = 1,\n    nudge_x = -0.09,\n    size = 3,\n    family = 'Merriweather'\n  )+\n  theme_minimal(\n    base_size = 10,\n    base_family = 'Merriweather'\n  )+\n  labs(subtitle = \"Evolution de la consommation moyenne par type de transmission\",\n       x = element_blank(),\n       y = element_blank(),\n       caption = \"Source : mpg data - ggplot2_package\"\n  )+\n  scale_x_continuous(\n    expand = expansion(mult = c(0.15,0.05))\n  )+\n  theme(\n    panel.grid.major.y = element_blank(),\n    plot.title.position = 'plot',\n    axis.text.y = element_blank()\n  )\n\n\n\n\n\n\n\n\n\nComment le type de traction inflence -t-il la consommation moyenne ? (avg_mpg vs. drv)\n\n\ncolors &lt;-  c(\"firebrick2\",'#009E73', 'dodgerblue4')\nnames(colors) &lt;-  unique(mpg_aumente$drv)\n\n\nmpg_aumente %&gt;% \n  ggplot(aes(avg_mpg, fill = drv, y = drv))+\n  geom_boxplot(width = 0.08) +\n  geom_dots(\n    side = 'bottom',\n    height = 0.55,\n    position = position_nudge(y = -0.075)\n  )+\n  stat_slab(\n    position = position_nudge(y = 0.075),\n    height = 0.75\n  )+\n  scale_fill_manual(values = colors)+\n  labs(\n    subtitle = \"Evolution de la consommation moyenne par type de traction\",\n    x = element_blank(),\n    y = element_blank(),\n    caption = \"Source : mpg data - ggplot2_package\"\n  )+\n  theme_minimal(\n    base_size = 10,\n    base_family = 'Merriweather'\n  )+\n  theme(\n    panel.grid.minor = element_blank(),\n    legend.position = 'none'\n  )"
  },
  {
    "objectID": "projets.html",
    "href": "projets.html",
    "title": "Mon Portfolio",
    "section": "",
    "text": "Analyse des donnees MPG\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nR\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nFeb 11, 2025\n\n\nAnasse Yahanan\n\n\n\n\n\n\n\n\n\n\n\n\nVisualiation des données\n\n\n\n\n\n\nnews\n\n\ncode\n\n\npython\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nJan 12, 2025\n\n\nAnasse Yahanan\n\n\n\n\n\n\n\n\n\n\n\n\nBienvenue sur mon blog\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nFeb 8, 2024\n\n\nAnassé Yahanan\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/EDA/index.html",
    "href": "posts/EDA/index.html",
    "title": "Visualisation des données avec Python",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np"
  },
  {
    "objectID": "posts/analyse-with-python/index.html",
    "href": "posts/analyse-with-python/index.html",
    "title": "Visualiation des données",
    "section": "",
    "text": "Vous envisagez de sortir voir un film. pour ce faire vous decidez de faire confiance aux critiques et évaluation en ligne. Cependant vous êtes convaincu l’entreprise qui affichie les notes gagne de l’argent en vandant les billets. Aussi une question vous vient à l’esprit : Est-ce que l’entreprise à tendance à sur-évaluer les films avec de meilleurs notes que celle qu’ils devraient obtenir ?\n\n\n\nUtilisez les compétences en pandas et data viz pour déterminer si les notes de Fandango en 2015 etaient orientées vers une meilleures évaluationnotation des films dans le but de vendre plus de billet.\n\n\n\nComparer les note des Fandango avec celles de l’article du site 538 Clique ici\n\n\n\n\n\n\n### Presentation des données\n\n\nData 1 : all_sites_scores.csv\n\n\nce dataset contient tous les films qui ont une note Rotten Tomatoes, une note RT User, une note Metacritic, une note note Metacritic User, une note IMDb, et au moins 30 critiques de fans sur Fandango. Les données ont été extraites de 24 août 2015\n\n\n\n\n\nData 2 : fandango_scrape.csv\n\n\ncontient tous les films de l’article 538 tirés de Fandango\n\n\n\n\n\n\n\n\n\n\nimport warnings\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt \nimport seaborn as sns \nwarnings.simplefilter(action=\"ignore\", category=FutureWarning)\n\n\n\n\n\nImportoation du dataset fandango_scrape.csv\n\n\nfandango = pd.read_csv(\"fandango_scrape.csv\")\n\n\nExploration des proprités du datasets et head\n\n\nfandango.head()\n\n\n\n\n\n\n\n\nFILM\nSTARS\nRATING\nVOTES\n\n\n\n\n0\nFifty Shades of Grey (2015)\n4.0\n3.9\n34846\n\n\n1\nJurassic World (2015)\n4.5\n4.5\n34390\n\n\n2\nAmerican Sniper (2015)\n5.0\n4.8\n34085\n\n\n3\nFurious 7 (2015)\n5.0\n4.8\n33538\n\n\n4\nInside Out (2015)\n4.5\n4.5\n15749\n\n\n\n\n\n\n\n\nfandango.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 504 entries, 0 to 503\nData columns (total 4 columns):\n #   Column  Non-Null Count  Dtype  \n---  ------  --------------  -----  \n 0   FILM    504 non-null    object \n 1   STARS   504 non-null    float64\n 2   RATING  504 non-null    float64\n 3   VOTES   504 non-null    int64  \ndtypes: float64(2), int64(1), object(1)\nmemory usage: 15.9+ KB\n\n\n\nfandango.describe().transpose()\n\n\n\n\n\n\n\n\ncount\nmean\nstd\nmin\n25%\n50%\n75%\nmax\n\n\n\n\nSTARS\n504.0\n3.558532\n1.563133\n0.0\n3.5\n4.0\n4.50\n5.0\n\n\nRATING\n504.0\n3.375794\n1.491223\n0.0\n3.1\n3.8\n4.30\n5.0\n\n\nVOTES\n504.0\n1147.863095\n3830.583136\n0.0\n3.0\n18.5\n189.75\n34846.0\n\n\n\n\n\n\n\n\nExplorons la popularité d’un film et son classement\n\n\nplt.figure(figsize =(10,4),dpi=150)\nsns.scatterplot(data = fandango,x = 'RATING', y = 'VOTES')\nplt.show();\n\n\n\n\n\n\n\n\n\nExplorons la corrélation entre les variables\n\n\nfandango[['STARS','RATING', 'VOTES']].corr()\n\n\n\n\n\n\n\n\nSTARS\nRATING\nVOTES\n\n\n\n\nSTARS\n1.000000\n0.994696\n0.164218\n\n\nRATING\n0.994696\n1.000000\n0.163764\n\n\nVOTES\n0.164218\n0.163764\n1.000000\n\n\n\n\n\n\n\nhypotheses : les variables STARS et RATING ne sont pas parfaitement corrélées. Il semble y avoir un ecart entre les scores attribués aux films et les étoiles"
  },
  {
    "objectID": "posts/analyse-with-python/index.html#projet-de-data-science",
    "href": "posts/analyse-with-python/index.html#projet-de-data-science",
    "title": "Visualiation des données",
    "section": "",
    "text": "Vous envisagez de sortir voir un film. pour ce faire vous decidez de faire confiance aux critiques et évaluation en ligne. Cependant vous êtes convaincu l’entreprise qui affichie les notes gagne de l’argent en vandant les billets. Aussi une question vous vient à l’esprit : Est-ce que l’entreprise à tendance à sur-évaluer les films avec de meilleurs notes que celle qu’ils devraient obtenir ?\n\n\n\nUtilisez les compétences en pandas et data viz pour déterminer si les notes de Fandango en 2015 etaient orientées vers une meilleures évaluationnotation des films dans le but de vendre plus de billet.\n\n\n\nComparer les note des Fandango avec celles de l’article du site 538 Clique ici\n\n\n\n\n\n\n### Presentation des données\n\n\nData 1 : all_sites_scores.csv\n\n\nce dataset contient tous les films qui ont une note Rotten Tomatoes, une note RT User, une note Metacritic, une note note Metacritic User, une note IMDb, et au moins 30 critiques de fans sur Fandango. Les données ont été extraites de 24 août 2015\n\n\n\n\n\nData 2 : fandango_scrape.csv\n\n\ncontient tous les films de l’article 538 tirés de Fandango\n\n\n\n\n\n\n\n\n\n\nimport warnings\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt \nimport seaborn as sns \nwarnings.simplefilter(action=\"ignore\", category=FutureWarning)\n\n\n\n\n\nImportoation du dataset fandango_scrape.csv\n\n\nfandango = pd.read_csv(\"fandango_scrape.csv\")\n\n\nExploration des proprités du datasets et head\n\n\nfandango.head()\n\n\n\n\n\n\n\n\nFILM\nSTARS\nRATING\nVOTES\n\n\n\n\n0\nFifty Shades of Grey (2015)\n4.0\n3.9\n34846\n\n\n1\nJurassic World (2015)\n4.5\n4.5\n34390\n\n\n2\nAmerican Sniper (2015)\n5.0\n4.8\n34085\n\n\n3\nFurious 7 (2015)\n5.0\n4.8\n33538\n\n\n4\nInside Out (2015)\n4.5\n4.5\n15749\n\n\n\n\n\n\n\n\nfandango.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 504 entries, 0 to 503\nData columns (total 4 columns):\n #   Column  Non-Null Count  Dtype  \n---  ------  --------------  -----  \n 0   FILM    504 non-null    object \n 1   STARS   504 non-null    float64\n 2   RATING  504 non-null    float64\n 3   VOTES   504 non-null    int64  \ndtypes: float64(2), int64(1), object(1)\nmemory usage: 15.9+ KB\n\n\n\nfandango.describe().transpose()\n\n\n\n\n\n\n\n\ncount\nmean\nstd\nmin\n25%\n50%\n75%\nmax\n\n\n\n\nSTARS\n504.0\n3.558532\n1.563133\n0.0\n3.5\n4.0\n4.50\n5.0\n\n\nRATING\n504.0\n3.375794\n1.491223\n0.0\n3.1\n3.8\n4.30\n5.0\n\n\nVOTES\n504.0\n1147.863095\n3830.583136\n0.0\n3.0\n18.5\n189.75\n34846.0\n\n\n\n\n\n\n\n\nExplorons la popularité d’un film et son classement\n\n\nplt.figure(figsize =(10,4),dpi=150)\nsns.scatterplot(data = fandango,x = 'RATING', y = 'VOTES')\nplt.show();\n\n\n\n\n\n\n\n\n\nExplorons la corrélation entre les variables\n\n\nfandango[['STARS','RATING', 'VOTES']].corr()\n\n\n\n\n\n\n\n\nSTARS\nRATING\nVOTES\n\n\n\n\nSTARS\n1.000000\n0.994696\n0.164218\n\n\nRATING\n0.994696\n1.000000\n0.163764\n\n\nVOTES\n0.164218\n0.163764\n1.000000\n\n\n\n\n\n\n\nhypotheses : les variables STARS et RATING ne sont pas parfaitement corrélées. Il semble y avoir un ecart entre les scores attribués aux films et les étoiles"
  }
]